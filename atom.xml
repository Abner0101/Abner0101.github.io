<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Old C</title>
  
  <subtitle>老黄瓜VIP专属折腾区</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jdsheng.cn/"/>
  <updated>2019-03-22T15:57:44.680Z</updated>
  <id>https://jdsheng.cn/</id>
  
  <author>
    <name>老黄瓜</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>浏览器：一个浏览器是如何工作的？（阶段二）</title>
    <link href="https://jdsheng.cn/2019/03/22/%E6%B5%8F%E8%A7%88%E5%99%A8%EF%BC%9A%E4%B8%80%E4%B8%AA%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84%EF%BC%9F%EF%BC%88%E9%98%B6%E6%AE%B5%E4%BA%8C%EF%BC%89/"/>
    <id>https://jdsheng.cn/2019/03/22/浏览器：一个浏览器是如何工作的？（阶段二）/</id>
    <published>2019-03-22T15:57:01.335Z</published>
    <updated>2019-03-22T15:57:44.680Z</updated>
    
    <content type="html"><![CDATA[<div class="_1kh1ihh6_0"><p>我在上一篇文章中，简要介绍了浏览器的工作大致可以分为 6 个阶段，我们昨天讲完了第一个阶段，也就是通讯的部分：浏览器使用 HTTP 协议或者 HTTPS 协议，向服务端请求页面的过程。</p><p>今天我们主要来看两个过程：如何解析请求回来的 HTML 代码，DOM 树又是如何构建的。<br><br><img src="https://static001.geekbang.org/resource/image/34/5a/34231687752c11173b7776ba5f4a0e5a.png" alt=""></p><h2>解析代码</h2><p>我们在前面讲到了 HTTP 的构成，但是我们有一部分没有详细讲解，那就是 Response 的 body 部分，这正是因为 HTTP 的 Response 的 body，就要交给我们今天学习的内容去处理了。</p><p>HTML 的结构不算太复杂，我们日常开发需要的 90% 的“词”（指编译原理的术语 token，表示最小的有意义的单元），种类大约只有标签开始、属性、标签结束、注释、CDATA 节点几种。</p><p>实际上有点麻烦的是，由于 HTML 跟 SGML 的千丝万缕的联系，我们需要做不少容错处理。“&lt;?”和“&lt;%”什么的也是必须要支持好的，报了错也不能吭声。</p><h3>1. 词（token）是如何被拆分的</h3><p>首先我们来看看一个非常标准的标签，会被如何拆分：</p><br><br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p <span class="built_in">class</span>=<span class="string">"a"</span>&gt;<span class="built_in">text</span> <span class="built_in">text</span> <span class="built_in">text</span>&lt;/p&gt;</span><br></pre></td></tr></table></figure><br><br><p>如果我们从最小有意义单元的定义来拆分，第一个词（token）是什么呢？显然，作为一个词（token），整个 p 标签肯定是过大了（它甚至可以嵌套）。</p><!-- [[[read_end]]] --><p>那么，只用 p 标签的开头是不是合适吗？我们考虑到起始标签也是会包含属性的，最小的意义单元其实是“&lt;p” ，所以“ &lt;p” 就是我们的第一个词（token）。</p><p>我们继续拆分，可以把这段代码依次拆成词（token）：</p><ul><br><li>&lt;p“标签开始”的开始；</li><br><li>class=“a” 属性；</li><br><li>&gt;  “标签开始”的结束；</li><br><li>text text text 文本；</li><br><li>&lt;/p&gt; 标签结束。</li><br></ul><p>这是一段最简单的例子，类似的还有什么呢？现在我们可以来来看看这些词（token）长成啥样子：</p><p><img src="https://static001.geekbang.org/resource/image/f9/84/f98444aa3ea7471d2414dd7d0f5e3a84.png" alt=""></p><p>根据这样的分析，现在我们讲讲浏览器是如何用代码实现，我们设想，代码开始从 HTTP 协议收到的字符流读取字符。</p><p>在接受第一个字符之前，我们完全无法判断这是哪一个词（token），不过，随着我们接受的字符越来越多，拼出其他的内容可能性就越来越少。</p><p>比如，假设我们接受了一个字符“ &lt; ” 我们一下子就知道这不是一个文本节点啦。</p><p>之后我们再读一个字符，比如就是 x，那么我们一下子就知道这不是注释和 CDATA 了，接下来我们就一直读，直到遇到“&gt;”或者空格，这样就得到了一个完整的词（token）了。</p><p>实际上，我们每读入一个字符，其实都要做一次决策，而且这些决定是跟“当前状态”有关的。在这样的条件下，浏览器工程师要想实现把字符流解析成词（token），最常见的方案就是使用状态机。</p><h3>2. 状态机</h3><p>绝大多数语言的词法部分都是用状态机实现的。那么我们来把部分词（token）的解析画成一个状态机看看：</p><p><img src="https://static001.geekbang.org/resource/image/8b/b0/8b43d598bc1f83a8a1e7e8f922013ab0.png" alt=""></p><p>当然了，我们这里的分析比较粗略，真正完整的 HTML 词法状态机，比我们描述的要复杂的多。更详细的内容，你可以参考<a href="https://html.spec.whatwg.org/multipage/parsing.html#tokenization" target="_blank" rel="noopener">HTML 官方文档</a>，HTML 官方文档规定了 80 个状态（顺便一说，HTML 是我见过唯一一个标准中规定了状态机实现的语言，对大部分语言来说，状态机是一种实现而非定义）。</p><p>这里我们为了理解原理，用这个简单的状态机就足够说明问题了。</p><p>状态机的初始状态，我们仅仅区分 “&lt; ”和 “非 &lt;”：</p><ul><br><li>如果获得的是一个非 &lt; 字符，那么可以认为进入了一个文本节点；</li><br><li>如果获得的是一个 &lt; 字符，那么进入一个标签状态。</li><br></ul><p>不过当我们在标签状态时，则会面临着一些可能性。</p><ul><br><li><br><p>比如下一个字符是“ ! ” ，那么很可能是进入了注释节点或者 CDATA 节点。</p><br></li><br><li><br><p>如果下一个字符是 “/ ”，那么可以确定进入了一个结束标签。</p><br></li><br><li><br><p>如果下一个字符是字母，那么可以确定进入了一个开始标签。</p><br></li><br><li><br><p>如果我们要完整处理各种 HTML 标准中定义的东西，那么还要考虑“ ? ”“% ”等内容。</p><br></li><br></ul><p>我们可以看到，用状态机做词法分析，其实正是把每个词的“特征字符”逐个拆开成独立状态，然后再把所有词的特征字符链合并起来，形成一个联通图结构。</p><p>由于状态机设计属于编译原理的基本知识，这里我们仅作一个简要的介绍。</p><p>接下来就是代码实现的事情了，在 C/C++ 和 JavaScript 中，实现状态机的方式大同小异：我们把每个函数当做一个状态，参数是接受的字符，返回值是下一个状态函数。（这里我希望再次强调下，状态机真的是一种没有办法封装的东西，所以我们永远不要试图封装状态机。）</p><p>为了方便理解和试验，我们这里用 JavaScript 来讲解，图上的 data 状态大概就像下面这样的：</p><br><br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="keyword">data</span> = function(c)&#123;</span><br><span class="line">    <span class="keyword">if</span>(c==<span class="string">"&amp;"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> characterReferenceInData;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(c==<span class="string">"&lt;"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> tagOpen;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c==<span class="string">"\0"</span>) &#123;</span><br><span class="line">        error();</span><br><span class="line">        emitToken(c);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(c==EOF) &#123;</span><br><span class="line">        emitToken(EOF);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        emitToken(c);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">data</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> tagOpenState = function tagOpenState(c)&#123;</span><br><span class="line">    <span class="keyword">if</span>(c==<span class="string">"/"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> endTagOpenState;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(c.match(/[A-Z]/)) &#123;</span><br><span class="line">        token = new StartTagToken();</span><br><span class="line">        token.name = c.toLowerCase();</span><br><span class="line">        <span class="keyword">return</span> tagNameState;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(c.match(/[a-z]/)) &#123;</span><br><span class="line">        token = new StartTagToken();</span><br><span class="line">        token.name = c;</span><br><span class="line">        <span class="keyword">return</span> tagNameState;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(c==<span class="string">"?"</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> bogusCommentState;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        error();</span><br><span class="line">        <span class="keyword">return</span> dataState;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//……</span></span><br></pre></td></tr></table></figure><br><br><p>这段代码给出了状态机的两个状态示例：data 即为初始状态，tagOpenState 是接受了一个“ &lt; ” 字符，来判断标签类型的状态。</p><p>这里的状态机，每一个状态是一个函数，通过“if else”来区分下一个字符做状态迁移。这里所谓的状态迁移，就是当前状态函数返回下一个状态函数。</p><p>这样，我们的状态迁移代码非常的简单：</p><br><br><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var <span class="keyword">state</span> = data;</span><br><span class="line">var char</span><br><span class="line">while(char = getInput())</span><br><span class="line">    <span class="keyword">state</span> = <span class="keyword">state</span>(char);</span><br></pre></td></tr></table></figure><br><br><p>这段代码的关键一句是“ state = state(char) ”，不论我们用何种方式来读取字符串流，我们都可以通过 state 来处理输入的字符流，这里用循环是一个示例，真实场景中，可能是来自 TCP 的输出流。</p><p>状态函数通过代码中的 emitToken 函数来输出解析好的 token（词），我们只需要覆盖 emitToken，即可指定对解析结果的处理方式。</p><p>词法分析器接受字符的方式很简单，就像下面这样：</p><br><br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">HTMLLexicalParser</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 状态函数们……</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">data</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ……</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">tagOpen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ……</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ……</span></span><br><span class="line">    <span class="keyword">var</span> state = data;</span><br><span class="line">    <span class="keyword">this</span>.receiveInput = <span class="function"><span class="keyword">function</span><span class="params">(char)</span> </span>&#123;</span><br><span class="line">        state = state(char);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><p>至此，我们就把字符流拆成了词（token）了。</p><h2>构建 DOM 树</h2><p>接下来我们要把这些简单的词变成 DOM 树，这个过程我们是使用栈来实现的，任何语言几乎都有栈，为了给你跑着玩，我们还是用 JavaScript 来实现吧，毕竟 JavaScript 中的栈只要用数组就好了。</p><br><br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">HTMLSyntaticalParser</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> stack = [<span class="keyword">new</span> HTMLDocument];</span><br><span class="line">    <span class="keyword">this</span>.receiveInput = <span class="function"><span class="keyword">function</span><span class="params">(token)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//……</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.getOutput = <span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> stack[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><p>我们这样来设计 HTML 的语法分析器，receiveInput 负责接收词法部分产生的词（token），通常可以由 emmitToken 来调用。</p><p>在接收的同时，即开始构建 DOM 树，所以我们的主要构建 DOM 树的算法，就写在 receiveInput 当中。当接收完所有输入，栈顶就是最后的根节点，我们 DOM 树的产出，就是这个 stack 的第一项。</p><p>为了构建 DOM 树，我们需要一个 Node 类，接下来我们所有的节点都会是这个 Node 类的实例。</p><p>在完全符合标准的浏览器中，不一样的 HTML 节点对应了不同的 Node 的子类，我们为了简化，就不完整实现这个继承体系了。我们仅仅把 Node 分为 Element 和 Text（如果是基于类的 OOP 的话，我们还需要抽象工厂来创建对象），</p><br><br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Element</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.childNodes = [];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Text</span><span class="params">(value)</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.value = value || <span class="string">""</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><p>前面我们的词（token）中，以下两个是需要成对匹配的：</p><ul><br><li>tag start</li><br><li>tag end</li><br></ul><p>根据一些编译原理中常见的技巧，我们使用的栈正是用于匹配开始和结束标签的方案。</p><p>对于 Text 节点，我们则需要把相邻的 Text 节点合并起来，我们的做法是当词（token）入栈时，检查栈顶是否是 Text 节点，如果是的话就合并 Text 节点</p><p>同样我们来看看直观的解析过程：</p><br><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">maaa</span>=<span class="string">a</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>cool<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"a"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><p>通过这个栈，我们可以构建 DOM 树：</p><ul><br><li>栈顶元素就是当前节点；</li><br><li>遇到属性，就添加到当前节点；</li><br><li>遇到文本节点，如果当前节点是文本节点，则跟文本节点合并，否则入栈成为当前节点的子节点；</li><br><li>遇到注释节点，作为当前节点的子节点；</li><br><li>遇到 tag start 就入栈一个节点，当前节点就是这个节点的父节点；</li><br><li>遇到 tag end 就出栈一个节点（还可以检查是否匹配）。</li><br></ul><p>我在文章里面放了一个视频，你可以点击查看用栈构造 DOM 树的全过程。</p><p><div><video style="vertical-align: top;width:680px;height:382px" webkit-playsinline="" playsinline="" x5-playsinline="" x5-video-player-type="h5" x5-video-player-fullscreen="true" src="blob:https://time.geekbang.org/2304de2a-be17-46d9-aff6-126315842eb1" controls="controls" poster="https://static001.geekbang.org/resource/image/7c/12/7cf7a46496b2c19ae78d263bcd75ef12.png"></video></div></p><p>当我们的源代码完全遵循 xhtml（这是一种比较严谨的 HTML 语法）时，这非常简单问题，然而 HTML 具有很强的容错能力，奥妙在于当 tag end 跟栈顶的 start tag 不匹配的时候如何处理。</p><p>于是，这又有一个极其复杂的规则，幸好 W3C 又一次很贴心地把全部规则都整理地很好，我们只要翻译成对应的代码就好了，以下这个网站呈现了全部规则。你可以点击查看。</p><p><a href="http://www.w3.org/html/wg/drafts/html/master/syntax.html#tree-construction" target="_blank" rel="noopener">http://www.w3.org/html/wg/drafts/html/master/syntax.html#tree-construction</a></p><h2>结语</h2><p>好了，总结一下。在今天的文章中，我带你继续探索了浏览器的工作原理，我们主要研究了解析代码和构建 DOM 树两个步骤。在解析代码的环节里，我们一起详细地分析了一个词（token）被拆分的过程，并且给出了实现它所需要的一个简单的状态机。</p><p>在构建 DOM 树的环节中，基本思路是使用栈来构建 DOM 树为了方便你动手实践，我用 JavaScript 实现了这一过程。</p><p>转自—《重学前端》</p></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;_1kh1ihh6_0&quot;&gt;&lt;p&gt;我在上一篇文章中，简要介绍了浏览器的工作大致可以分为 6 个阶段，我们昨天讲完了第一个阶段，也就是通讯的部分：浏览器使用 HTTP 协议或者 HTTPS 协议，向服务端请求页面的过程。&lt;/p&gt;&lt;p&gt;今天我们主要来看两个过程：
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jdsheng.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>浏览器：一个浏览器是如何工作的？（阶段一）</title>
    <link href="https://jdsheng.cn/2019/03/22/%E6%B5%8F%E8%A7%88%E5%99%A8%EF%BC%9A%E4%B8%80%E4%B8%AA%E6%B5%8F%E8%A7%88%E5%99%A8%E6%98%AF%E5%A6%82%E4%BD%95%E5%B7%A5%E4%BD%9C%E7%9A%84%EF%BC%9F%EF%BC%88%E9%98%B6%E6%AE%B5%E4%B8%80%EF%BC%89/"/>
    <id>https://jdsheng.cn/2019/03/22/浏览器：一个浏览器是如何工作的？（阶段一）/</id>
    <published>2019-03-22T15:18:19.918Z</published>
    <updated>2019-03-22T16:03:47.567Z</updated>
    
    <content type="html"><![CDATA[<p><div class="_1kh1ihh6_0"><p>对于前端开发来说，我们平时与浏览器打交道的时间是最多的。可浏览器对前端同学来说更多像一个神秘黑盒子的存在。我们仅仅知道它能做什么，而不知道它是如何做到的。</p><p>在我面试和接触过的前端开发者中，70% 的前端同学对这部分的知识内容只能达到“一知半解”的程度。甚至还有一部分同学会质疑这部分知识是否重要：这与我们的工作相关吗，学多了会不会偏移前端工作的方向？</p><p>事实上，我们这里所需要了解的浏览器工作原理只是它的大致过程，这部分浏览器工作原理不但是前端面试的常考知识点，它还会辅助你的实际工作，学习浏览器的内部工作原理和个中缘由，对于我们做性能优化、排查错误都有很大的好处。</p><p>在我们的课程中，我也会控制浏览器相关知识的粒度，把它保持在“给前端工程师了解浏览器”的水准，而不是详细到“给浏览器开发工程师实现浏览器”的水准。</p><p>那么，我们今天开始，来共同思考一下。一个浏览器到底是如何工作的。</p><p>实际上，对浏览器的实现者来说，他们做的事情，就是把一个 URL 变成一个屏幕上显示的网页。</p><p>这个过程是这样的：</p><ol></ol></div></p><p><li>浏览器首先使用 HTTP 协议或者 HTTPS 协议，向服务端请求页面；</li></p><p><li>把请求回来的 HTML 代码经过解析，构建成 DOM 树；</li></p><p><li>计算 DOM 树上的 CSS 属性；</li></p><p><li>最后根据 CSS 属性对元素逐个进行渲染，得到内存中的位图；</li></p><p><li>一个可选的步骤是对位图进行合成，这会极大地增加后续绘制的速度；</li></p><p><li>合成之后，再绘制到界面上。</li><br><!-- [[[read_end]]] --></p><p><img src="https://static001.geekbang.org/resource/image/63/4c/6391573a276c47a9a50ae0cbd2c5844c.jpg" alt=""></p><p>我们在开始详细介绍之前，要建立一个感性认识。我们从 HTTP 请求回来开始，这个过程并非一般想象中的一步做完再做下一步，而是一条流水线。</p><p>从 HTTP 请求回来，就产生了流式的数据，后续的 DOM 树构建、CSS 计算、渲染、合成、绘制，都是尽可能地流式处理前一步的产出：即不需要等到上一步骤完全结束，就开始处理上一步的输出，这样我们在浏览网页时，才会看到逐步出现的页面。</p><p>首先我们来介绍下网络通讯的部分。</p><h2>HTTP 协议</h2><p>浏览器首先要做的事就是根据 URL 把数据取回来，取回数据使用的是 HTTP 协议（实际上这个过程之前还有 DNS 查询，不过这里就不详细展开了。）</p><p>我先来了解下 HTTP 的标准。</p><p>HTTP 标准由 IETF 组织制定，跟它相关的标准主要有两份：</p><ol><p></p><p><li>HTTP1.1 <a href="https://tools.ietf.org/html/rfc2616" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc2616</a></li><br></p></ol><p>2.HTTP1.1 <a href="https://tools.ietf.org/html/rfc7234" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc7234</a></p><p>HTTP 协议是基于 TCP 协议出现的，对 TCP 协议来说，TCP 协议是一条双向的通讯通道，HTTP 在 TCP 的基础上，规定了 Request-Response 的模式。这个模式决定了通讯必定是由浏览器端首先发起的。</p><p>大部分情况下，浏览器的实现者只需要用一个 TCP 库，甚至一个现成的 HTTP 库就可以搞定浏览器的网络通讯部分。HTTP 是纯粹的文本协议，它是规定了使用 TCP 协议来传输文本格式的一个应用层协议。</p><p>下面，我们试着用一个纯粹的 TCP 客户端来手工实现 HTTP 一下：</p><h2>实验</h2><p>我们的实验需要使用 telnet 客户端，这个客户端是一个纯粹的 TCP 连接工具（安装方法）。</p><p>首先我们运行 telnet，连接到极客时间主机，在命令行里输入以下内容：</p><p></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet <span class="selector-tag">time</span><span class="selector-class">.geekbang</span><span class="selector-class">.org</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>这个时候，TCP 连接已经建立，我们输入以下字符作为请求：</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GET</span> <span class="string">/</span> HTTP/1.1</span><br><span class="line"><span class="attribute">Host</span>: time.geekbang.org</span><br></pre></td></tr></table></figure><p>按下两次回车，我们收到了服务端的回复：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">301</span> Moved Permanently</span><br><span class="line"><span class="attribute">Date</span>: Fri, 25 Jan 2019 13:28:12 GMT</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html</span><br><span class="line"><span class="attribute">Content-Length</span>: 182</span><br><span class="line"><span class="attribute">Connection</span>: keep-alive</span><br><span class="line"><span class="attribute">Location</span>: https://time.geekbang.org/</span><br><span class="line"><span class="attribute">Strict-Transport-Security</span>: max-age=15768000</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;&lt;title&gt;301 Moved Permanently&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">&lt;body bgcolor="white"&gt;</span><br><span class="line">&lt;center&gt;&lt;h1&gt;301 Moved Permanently&lt;/h1&gt;&lt;/center&gt;</span><br><span class="line">&lt;hr&gt;&lt;center&gt;openresty&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p></p><p>这就是一次完整的 HTTP 请求的过程了，我们可以看到，在 TCP 通道中传输的，完全是文本。</p><p>在请求部分，第一行被称作 request line，它分为三个部分，HTTP Method，也就是请求的“方法”，请求的路径和请求的协议和版本。</p><p>在响应部分，第一行被称作 response line，它也分为三个部分，协议和版本、状态码和状态文本。</p><p>紧随在 request line 或者 response line 之后，是请求头 / 响应头，这些头由若干行组成，每行是用冒号分隔的名称和值。</p><p>在头之后，以一个空行（两个换行符）为分隔，是请求体 / 响应体，请求体可能包含文件或者表单数据，响应体则是 html 代码。</p><h2>HTTP 协议格式</h2><p>根据上面的分析，我们可以知道 HTTP 协议，大概可以划分成如下部分。</p><p><img src="https://static001.geekbang.org/resource/image/3d/a1/3db5e0f362bc276b83c7564430ecb0a1.jpg" alt=""></p><p>我们简单看一下，在这些部分中，path 是请求的路径完全由服务端来定义，没有很多的特别内容；而 version 几乎都是固定字符串；response body 是我们最熟悉的 HTML，我在后面会有专门的课程介绍，这里也就不多讲了。</p><p>下面我们就来逐个给你介绍其它部分。</p><h2>HTTP Method（方法）</h2><p>我们首先来介绍一下 request line 里面的方法部分。这里的方法跟我们编程中的方法意义类似，表示我们此次 HTTP 请求希望执行的操作类型。方法有以下几种定义：</p><ul><p></p><p><li>GET</li></p><p><li>POST</li></p><p><li>HEAD</li></p><p><li>PUT</li></p><p><li>DELETE</li></p><p><li>CONNECT</li></p><p><li>OPTIONS</li></p><p><li>TRACE</li><br></p></ul><p>浏览器通过地址栏访问页面都是 GET 方法。表单提交产生 POST 方法。</p><p>HEAD 则是跟 GET 类似，只返回请求头，多数由 JavaScript 发起</p><p>PUT 和 DELETE 分别表示添加资源和删除资源，但是实际上这只是语义上的一种约定，并没有强约束。</p><p>CONNECT 现在多用于 HTTPS 和 WebSocket。</p><p>OPTIONS 和 TRACE 一般用于调试，多数线上服务都不支持。</p><h2>HTTP Status code（状态码）和 Status text（状态文本）</h2><p>接下来我们看看 response line 的状态码和状态文本。常见的状态码有以下几种。</p><ul><p></p><p><li>1xx：临时回应，表示客户端请继续。</li></p><p><li>2xx：请求成功。</li></p><p><ul></ul></p><p><li>200：请求成功。</li><br></p></ul><br><p></p><p><li>3xx: 表示请求的目标有变化，希望客户端进一步处理。</li></p><p><ul></ul></p><p><li>301&amp;302：永久性与临时性跳转。</li></p><p><li>304：跟客户端缓存没有更新。</li><br><br></p><p><li>4xx：客户端请求错误。</li></p><p><ul></ul></p><p><li>403：无权限。</li></p><p><li>404：表示请求的页面不存在。</li></p><p><li>418：It’s a teapot. 这是一个彩蛋，来自 ietf 的一个愚人节玩笑。（<a href="https://tools.ietf.org/html/rfc2324" target="_blank" rel="noopener">超文本咖啡壶控制协议</a>）</li><br><br></p><p><li>5xx：服务端请求错误。</li></p><p><ul></ul></p><p><li>500：服务端错误。</li></p><p><li>503：服务端暂时性错误，可以一会再试。</li><br><br><br></p><p>对我们前端来说，1xx 系列的状态码是非常陌生的，原因是 1xx 的状态被浏览器 http 库直接处理掉了，不会让上层应用知晓。</p><p>2xx 系列的状态最熟悉的就是 200，这通常是网页请求成功的标志，也是大家最喜欢的状态码。</p><p>3xx 系列比较复杂，301 和 302 两个状态表示当前资源已经被转移，只不过一个是永久性转移，一个是临时性转移。实际上 301 更接近于一种报错，提示客户端下次别来了。</p><p>304 又是一个每个前端必知必会的状态，产生这个状态的前提是：客户端本地已经有缓存的版本，并且在 Request 中告诉了服务端，当服务端通过时间或者 tag，发现没有更新的时候，就会返回一个不含 body 的 304 状态。</p><h2>HTTP Head (HTTP 头)</h2><p>HTTP 头可以看作一个键值对。原则上，HTTP 头也是一种数据，我们可以自由定义 HTTP 头和值。不过在 HTTP 规范中，规定了一些特殊的 HTTP 头，我们现在就来了解一下它们。</p><p>在 HTTP 标准中，有完整的请求 / 响应头规定，这里我们挑几个重点的说一下：</p><p>我们先来看看 Request Header。</p><p><img src="https://static001.geekbang.org/resource/image/2b/a2/2be3e2457f08bdf624837dfaee01e4a2.png" alt=""></p><p>接下来看一下 Response Header。<br><br><img src="https://static001.geekbang.org/resource/image/ef/c9/efdeadf27313e08bf0789a3b5480f7c9.png" alt=""></p><p>这里仅仅列出了我认为比较常见的 HTTP 头，这些头是我认为前端工程师应该做到不需要查阅，看到就可以知道意思的 HTTP 头。完整的列表还是请你参考我给出的 rfc2616 标准。</p><h2>HTTP Request Body</h2><p>HTTP 请求的 body 主要用于提交表单场景。实际上，http 请求的 body 是比较自由的，只要浏览器端发送的 body 服务端认可就可以了。一些常见的 body 格式是：</p><ul><p></p><p><li>application/json</li></p><p><li>application/x-www-form-urlencoded</li></p><p><li>multipart/form-data</li></p><p><li>text/xml</li><br></p></ul><p>我们使用 html 的 form 标签提交产生的 html 请求，默认会产生 application/x-www-form-urlencoded 的数据格式，当有文件上传时，则会使用 multipart/form-data。</p><h2>HTTPS</h2><p>在 HTTP 协议的基础上，HTTPS 和 HTTP2 规定了更复杂的内容，但是它基本保持了 HTTP 的设计思想，即：使用上的 Request-Response 模式。</p><p>我们首先来了解下 HTTPS。HTTPS 有两个作用，一是确定请求的目标服务端身份，二是保证传输的数据不会被网络中间节点窃听或者篡改。</p><p>HTTPS 的标准也是由 RFC 规定的，你可以查看它的详情链接：</p><p><a href="https://tools.ietf.org/html/rfc2818" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc2818</a></p><p>HTTPS 是使用加密通道来传输 HTTP 的内容。但是 HTTPS 首先与服务端建立一条 TLS 加密通道。TLS 构建于 TCP 协议之上，它实际上是对传输的内容做一次加密，所以从传输内容上看，HTTPS 跟 HTTP 没有任何区别。</p><h2>HTTP 2</h2><p>HTTP 2 是 HTTP 1.1 的升级版本，你可以查看它的详情链接。</p><p><a href="https://tools.ietf.org/html/rfc7540" target="_blank" rel="noopener">https://tools.ietf.org/html/rfc7540</a></p><p>HTTP 2.0 最大的改进有两点，一是支持服务端推送，二是支持 TCP 连接复用。</p><p>服务端推送能够在客户端发送第一个请求到服务端时，提前把一部分内容推送给客户端，放入缓存当中，这可以避免客户端请求顺序带来的并行度不高，从而导致的性能问题。</p><p>TCP 连接复用，则使用同一个 TCP 连接来传输多个 HTTP 请求，避免了 TCP 连接建立时的三次握手开销，和初建 TCP 连接时传输窗口小的问题。</p><blockquote><p></p><p></p><p><span class="reference">Note: 其实很多优化涉及更下层的协议。IP 层的分包情况，和物理层的建连时间是需要被考虑的。</span></p><br></blockquote><h2>结语</h2><p>在这一节内容中，我们一起学习了浏览器的第一步工作，也就是“浏览器首先使用 HTTP 协议或 HTTPS 协议，向服务端请求页面”的这一过程。</p><p>在这个过程中，掌握 HTTP 协议是重中之重。我从一个小实验开始，带你体验了一次完整的 HTTP 请求过程。我们一起先分析了 HTTP 协议的结构。接下来，我分别介绍了 HTTP 方法、HTTP 状态码和状态文本、HTTP Head 和 HTTP Request Body 几个重点需要注意的部分。</p><p>最后，我还介绍了 HTTPS 和 HTTP 2 这两个补充版本，以便你可以更好地熟悉并理解新的特性。</p><p>转自–《重学前端》</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;div class=&quot;_1kh1ihh6_0&quot;&gt;&lt;p&gt;对于前端开发来说，我们平时与浏览器打交道的时间是最多的。可浏览器对前端同学来说更多像一个神秘黑盒子的存在。我们仅仅知道它能做什么，而不知道它是如何做到的。&lt;/p&gt;&lt;p&gt;在我面试和接触过的前端开发者中，70% 的前端同学
      
    
    </summary>
    
    
      <category term="前端" scheme="https://jdsheng.cn/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>PHP知识点积累</title>
    <link href="https://jdsheng.cn/2018/09/17/PHP%E7%9F%A5%E8%AF%86%E7%82%B9%E7%A7%AF%E7%B4%AF/"/>
    <id>https://jdsheng.cn/2018/09/17/PHP知识点积累/</id>
    <published>2018-09-17T14:44:18.521Z</published>
    <updated>2018-09-17T14:44:57.386Z</updated>
    
    <content type="html"><![CDATA[<p>1、<a href="https://www.cnblogs.com/yonge/articles/2687014.html" target="_blank" rel="noopener">关于$_FILES 处理文件上传</a><br>2、<a href="https://www.cnblogs.com/m-m-g-y0416/p/5552483.html" target="_blank" rel="noopener">数组的定义和遍历</a><br>3、<a href="https://blog.csdn.net/q740766100/article/details/80281773" target="_blank" rel="noopener">关于命名空间的简单介绍</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、&lt;a href=&quot;https://www.cnblogs.com/yonge/articles/2687014.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;关于$_FILES 处理文件上传&lt;/a&gt;&lt;br&gt;2、&lt;a href=&quot;https:/
      
    
    </summary>
    
    
      <category term="PHP" scheme="https://jdsheng.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>PHP mysql数据库面向对象简单操作类（增删改查）、分页类和图片验证码类的封装</title>
    <link href="https://jdsheng.cn/2018/09/17/php%20mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%AE%80%E5%8D%95%E6%93%8D%E4%BD%9C%E7%B1%BB%EF%BC%88%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%EF%BC%89%E3%80%81%E5%88%86%E9%A1%B5%E7%B1%BB%E5%92%8C%E5%9B%BE%E7%89%87%E9%AA%8C%E8%AF%81%E7%A0%81%E7%B1%BB%E7%9A%84%E5%B0%81%E8%A3%85/"/>
    <id>https://jdsheng.cn/2018/09/17/php mysql数据库面向对象简单操作类（增删改查）、分页类和图片验证码类的封装/</id>
    <published>2018-09-17T14:41:06.278Z</published>
    <updated>2018-09-17T14:43:32.013Z</updated>
    
    <content type="html"><![CDATA[<p>这篇文章中已经介绍了PHP连接数据库的方法以及最基本的对数据库的操作，但并没有实现模块化，所有的代码全都集中在表现页面中，造成了代码冗余，不仅不利于维护也不利于代码的重用性，那么在这篇文章中将用面向对象的知识对数据库的连接和基本操作方法进行封装，也简单地对地分页功能进行了封装，这样就大大避免了代码的重复。</p><blockquote><p>以下文件放置于space文件夹中</p></blockquote><h2 id="一、封装简单的数据库的增删改查等函数"><a href="#一、封装简单的数据库的增删改查等函数" class="headerlink" title="一、封装简单的数据库的增删改查等函数"></a>一、封装简单的数据库的增删改查等函数</h2><blockquote><p>libs/Db文件夹</p></blockquote><p>1、先写一个db.config.php文件来使用里面是你数据库的信息</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">return</span> <span class="keyword">array</span>(</span></span><br><span class="line"><span class="php"><span class="string">'host'</span> =&gt; <span class="string">'localhost'</span>,</span></span><br><span class="line"><span class="php"><span class="string">'user'</span> =&gt; <span class="string">'root'</span>,</span></span><br><span class="line"><span class="php"><span class="string">'password'</span> =&gt; <span class="string">'root'</span>,</span></span><br><span class="line"><span class="php"><span class="string">'port'</span> =&gt; <span class="string">'3306'</span>,</span></span><br><span class="line"><span class="php"><span class="string">'dbname'</span> =&gt; <span class="string">'test'</span>,</span></span><br><span class="line"><span class="php"><span class="string">'charset'</span> =&gt; <span class="string">'utf8'</span></span></span><br><span class="line"><span class="php">);</span></span><br></pre></td></tr></table></figure><p>2、通过Idb.class.php文件来定义接口</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">libs</span>\<span class="title">Db</span>; <span class="comment">//引入命名空间</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">interface</span> <span class="title">Idb</span> </span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">()</span></span>;</span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getOne</span><span class="params">()</span></span>;</span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getList</span><span class="params">()</span></span>;</span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">()</span></span>;</span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">()</span></span>;</span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">count</span><span class="params">()</span></span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><p><em><a href="https://blog.csdn.net/q740766100/article/details/80281773" target="_blank" rel="noopener">什么是命名空间</a></em></p><p>3、通过Mysql.class.php来封装接口的各个功能</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">libs</span>\<span class="title">Db</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Mysql</span> <span class="keyword">implements</span> <span class="title">Idb</span> </span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $_link = <span class="keyword">NULL</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $_debug = <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $_where = <span class="keyword">NULL</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $_table = <span class="keyword">NULL</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $_data = <span class="keyword">NULL</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $_fields = <span class="keyword">NULL</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $_limit=<span class="keyword">NULL</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $_order = <span class="keyword">NULL</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> <span class="keyword">static</span> $_instance = <span class="keyword">NULL</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( <span class="keyword">$this</span>-&gt;_link == <span class="keyword">NULL</span> )</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;connect();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( <span class="keyword">self</span>::$_instance == <span class="keyword">NULL</span> )</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">self</span>::$_instance = <span class="keyword">new</span> <span class="keyword">self</span>();</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> <span class="keyword">self</span>::$_instance;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">excute</span><span class="params">($sql)</span> //执行<span class="title">sql</span>语句</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( <span class="keyword">$this</span>-&gt;_debug == <span class="keyword">true</span> )</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> <span class="string">"EXCUTE SQL: &#123;$sql&#125; &lt;br/&gt;"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$ret = <span class="keyword">$this</span>-&gt;_link-&gt;query($sql);</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> $ret;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setDebug</span><span class="params">( $debug = true )</span> //调试函数</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_debug = $debug;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span><span class="params">()</span> //连接数据库</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">$conf = <span class="keyword">require_once</span> <span class="string">'db.config.php'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_link = <span class="keyword">new</span> \mysqli($conf[<span class="string">'host'</span>], $conf[<span class="string">'user'</span>], $conf[<span class="string">'password'</span>], $conf[<span class="string">'dbname'</span>],$conf[<span class="string">'port'</span>]);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_link-&gt;connect_error) &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">die</span>(<span class="string">'Connect Error ('</span> . <span class="keyword">$this</span>-&gt;_link-&gt;connect_errno . <span class="string">') '</span></span></span><br><span class="line"><span class="php">            . <span class="keyword">$this</span>-&gt;_link-&gt;connect_error);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">date_default_timezone_set(<span class="string">'PRC'</span>); <span class="comment">//设时区</span></span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_link-&gt;query(<span class="string">"SET NAME &#123;$conf['charset']&#125;"</span>);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">table</span><span class="params">( $table )</span> //获取表</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_table = $table;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> <span class="keyword">$this</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">where</span><span class="params">($where= NULL)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_where = $where;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> <span class="keyword">$this</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">data</span><span class="params">($data)</span> </span></span></span><br><span class="line"><span class="php">&#123; </span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_data = $data;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> <span class="keyword">$this</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">field</span><span class="params">($fields)</span></span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_fields = $fields;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> <span class="keyword">$this</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">order</span><span class="params">($order)</span></span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_order = $order;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> <span class="keyword">$this</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">limit</span><span class="params">($limit)</span></span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_limit = $limit;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> <span class="keyword">$this</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span><span class="params">()</span> //添加数据</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">$sql = <span class="string">"INSERT INTO &#123;$this-&gt;_table&#125; ("</span>;</span></span><br><span class="line"><span class="php">$fields = <span class="string">""</span>;</span></span><br><span class="line"><span class="php">$values = <span class="string">""</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">foreach</span>( <span class="keyword">$this</span>-&gt;_data <span class="keyword">as</span> $key =&gt; $val )</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $fields == <span class="string">""</span> )$fields = $key;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> $fields .= <span class="string">","</span>.$key;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $values == <span class="string">""</span> )$values = <span class="string">"'&#123;$val&#125;'"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> $values .= <span class="string">","</span>.<span class="string">"'&#123;$val&#125;'"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$sql .= <span class="string">"&#123;$fields&#125; )VALUES(&#123;$values&#125;)"</span>;</span></span><br><span class="line"><span class="php">$ret = <span class="keyword">$this</span>-&gt;excute($sql);</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> $ret;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getOne</span><span class="params">()</span> //获取一组数据</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="comment">//select id,name from table where id = 10</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( is_array(<span class="keyword">$this</span>-&gt;_fields) ) $fields = implode(<span class="string">','</span>, $fields);</span></span><br><span class="line"><span class="php">$sql = <span class="string">"SELECT &#123;$this-&gt;_fields&#125; FROM &#123;$this-&gt;_table&#125;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( <span class="keyword">$this</span>-&gt;_where != <span class="keyword">NULL</span> ) $sql .= <span class="string">" WHERE &#123;$this-&gt;_where&#125;"</span>;</span></span><br><span class="line"><span class="php">$ret = <span class="keyword">$this</span>-&gt;excute($sql); <span class="comment">//select 操作query 返回的是结果集</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $ret == <span class="keyword">false</span> )<span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">$row = $ret-&gt;fetch_assoc();</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( <span class="keyword">empty</span>($row) ) <span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> $row;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getList</span><span class="params">()</span> //获取多组数据</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="comment">//select id,name from table where id &gt; 10</span></span></span><br><span class="line"><span class="php"><span class="comment">//若查询字段为一维数组，以,拼接为目标字符串</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( is_array(<span class="keyword">$this</span>-&gt;_fields) ) <span class="keyword">$this</span>-&gt;_fields = implode(<span class="string">','</span>, <span class="keyword">$this</span>-&gt;_fields);</span></span><br><span class="line"><span class="php">$sql = <span class="string">"SELECT &#123;$this-&gt;_fields&#125; FROM &#123;$this-&gt;_table&#125;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( <span class="keyword">$this</span>-&gt;_where != <span class="keyword">NULL</span> ) $sql .= <span class="string">" WHERE &#123;$this-&gt;_where&#125;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_order !=<span class="keyword">NULL</span>) $sql .= <span class="string">" ORDER BY &#123;$this-&gt;_order&#125;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( <span class="keyword">$this</span>-&gt;_limit != <span class="keyword">NULL</span> ) $sql .= <span class="string">" LIMIT &#123;$this-&gt;_limit&#125;"</span>;</span></span><br><span class="line"><span class="php">$ret = <span class="keyword">$this</span>-&gt;excute($sql);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $ret == <span class="keyword">false</span> )<span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">$result = [];</span></span><br><span class="line"><span class="php"><span class="keyword">while</span> ( ($row = $ret-&gt;fetch_assoc()) != <span class="keyword">false</span>) &#123;</span></span><br><span class="line"><span class="php">$result[] = $row;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> $result;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">()</span> //更新数据</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="comment">//update table set name = "wein" where id = 1</span></span></span><br><span class="line"><span class="php">$sql = <span class="string">"UPDATE &#123;$this-&gt;_table&#125; SET "</span>;</span></span><br><span class="line"><span class="php">$fields = <span class="string">""</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">foreach</span>( <span class="keyword">$this</span>-&gt;_data <span class="keyword">as</span> $key =&gt; $val )</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $fields == <span class="string">""</span> )$fields = <span class="string">"&#123;$key&#125;='&#123;$val&#125;'"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span> $fields .= <span class="string">","</span>.<span class="string">"&#123;$key&#125;='&#123;$val&#125;'"</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( <span class="keyword">$this</span>-&gt;_where != <span class="keyword">NULL</span> ) $sql .= <span class="string">"&#123;$fields&#125; WHERE &#123;$this-&gt;_where&#125;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span>  $sql .= <span class="string">"&#123;$fields&#125;"</span>;</span></span><br><span class="line"><span class="php">$ret = <span class="keyword">$this</span>-&gt;excute($sql);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $ret == <span class="keyword">false</span> )<span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">$row = <span class="keyword">$this</span>-&gt;_link-&gt;affected_rows;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $row == <span class="number">0</span> ) <span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> <span class="keyword">true</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span><span class="params">()</span>//删除数据</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="comment">//拼接sql语句</span></span></span><br><span class="line"><span class="php"><span class="comment">//delete from table where id =1</span></span></span><br><span class="line"><span class="php">$sql = <span class="string">"DELETE FROM &#123;$this-&gt;_table&#125; WHERE &#123;$this-&gt;_where&#125;"</span>;</span></span><br><span class="line"><span class="php">$ret = <span class="keyword">$this</span>-&gt;excute($sql);</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> $ret;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">count</span><span class="params">()</span>  //统计数据</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">$sql = <span class="string">"SELECT COUNT(&#123;$this-&gt;_fields&#125;) AS num FROM &#123;$this-&gt;_table&#125;"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( <span class="keyword">$this</span>-&gt;_where != <span class="keyword">NULL</span> ) $sql .= <span class="string">" WHERE &#123;$this-&gt;_where&#125;"</span>;</span></span><br><span class="line"><span class="php">$ret = <span class="keyword">$this</span>-&gt;excute($sql); <span class="comment">//select 操作query 返回的是结果集</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $ret == <span class="keyword">false</span> )<span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php">$row = $ret-&gt;fetch_assoc();</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( <span class="keyword">empty</span>($row) ) <span class="keyword">return</span> <span class="keyword">false</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> $row[<span class="string">'num'</span>];</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> //断开数据库连接</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_link-&gt;close();</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_link = <span class="keyword">NULL</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="二、分页类的封装"><a href="#二、分页类的封装" class="headerlink" title="二、分页类的封装"></a>二、分页类的封装</h2><blockquote><p>libs/Page文件夹</p></blockquote><p>1、通过Page.class.php文件来封装</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">libs</span>\<span class="title">Page</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Page</span> </span>&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $_totals = <span class="number">0</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $_pagesize = <span class="number">0</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">( $pagesize, $total )</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_totals = $total;</span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;_pagesize = $pagesize;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getoffset</span><span class="params">()</span> //获取展示下一页开始的<span class="title">id</span>值</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">$page = <span class="keyword">isset</span>($_GET[<span class="string">'page'</span>])?$_GET[<span class="string">'page'</span>]:<span class="number">1</span>;</span></span><br><span class="line"><span class="php">$offset = ($page <span class="number">-1</span>) * <span class="keyword">$this</span>-&gt;_pagesize;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> $offset;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">($left = <span class="number">2</span>)</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">$page = <span class="keyword">isset</span>($_GET[<span class="string">'page'</span>])?$_GET[<span class="string">'page'</span>]:<span class="number">1</span>;</span></span><br><span class="line"><span class="php">$totalPages = ceil(<span class="keyword">$this</span>-&gt;_totals / <span class="keyword">$this</span>-&gt;_pagesize);</span></span><br><span class="line"><span class="php">$html = <span class="string">'&lt;ul class="page-ui-box"&gt;'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $page &gt; <span class="number">1</span> )&#123;</span></span><br><span class="line"><span class="php">$html .= <span class="string">'&lt;li class="able"&gt;&lt;a href="?page=1"&gt;首页&lt;/a&gt;&lt;/li&gt;'</span>;</span></span><br><span class="line"><span class="php">$html .= <span class="string">'&lt;li class="able"&gt;&lt;a href="?page='</span>.($page<span class="number">-1</span>).<span class="string">'"&gt;上一页&lt;/a&gt;&lt;/li&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">$html .= <span class="string">'&lt;li class="unable"&gt;&lt;a&gt;首页&lt;/a&gt;&lt;/li&gt;'</span>;</span></span><br><span class="line"><span class="php">$html .= <span class="string">'&lt;li class="unable"&gt;&lt;a&gt;上一页&lt;/a&gt;&lt;/li&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">//当前页的前面显示两个数字页面</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$start = ($page - $left);</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $start &lt;= <span class="number">0</span> ) $start = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">for</span>( $i = $start; $i &lt; $page; $i++ )</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">$html .= <span class="string">'&lt;li class="able"&gt;&lt;a href="?page='</span>.$i.<span class="string">'"&gt;'</span>.$i.<span class="string">'&lt;/a&gt;&lt;/li&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">$html .= <span class="string">'&lt;li class="unable"&gt;&lt;a&gt;'</span>.$page.<span class="string">'&lt;/a&gt;&lt;/li&gt;'</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="comment">//当前页的后面显示两个数字页面</span></span></span><br><span class="line"><span class="php">$end = $page + <span class="number">2</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $end &gt; $totalPages ) $end = $totalPages;</span></span><br><span class="line"><span class="php"><span class="keyword">for</span>( $i = $page + <span class="number">1</span>; $i &lt;= $end; $i++ )</span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">$html .= <span class="string">'&lt;li class="able"&gt;&lt;a href="?page='</span>.$i.<span class="string">'"&gt;'</span>.$i.<span class="string">'&lt;/a&gt;&lt;/li&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> ( $page &lt; $totalPages ) </span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">$html .= <span class="string">'&lt;li class="able"&gt;&lt;a href="?page='</span>.($page+<span class="number">1</span>).<span class="string">'"&gt;下一页&lt;/a&gt;&lt;/li&gt;'</span>;</span></span><br><span class="line"><span class="php">$html .= <span class="string">'&lt;li class="able"&gt;&lt;a href="?page='</span>.$totalPages.<span class="string">'"&gt;尾页&lt;/a&gt;&lt;/li&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">else</span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">$html .= <span class="string">'&lt;li class="unable"&gt;&lt;a&gt;下一页&lt;/a&gt;&lt;/li&gt;'</span>;</span></span><br><span class="line"><span class="php">$html .= <span class="string">'&lt;li class="unable"&gt;&lt;a&gt;尾页&lt;/a&gt;&lt;/li&gt;'</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$html .= <span class="string">'&lt;/ul&gt;'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">return</span> $html;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>2、样式文件Page-ui.css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">* &#123;<span class="attribute">margin</span>: <span class="number">0px</span>;<span class="attribute">padding</span>: <span class="number">0px</span>;&#125;</span><br><span class="line"><span class="selector-tag">ul</span>, <span class="selector-tag">li</span> &#123;<span class="attribute">list-style</span>: none;&#125;</span><br><span class="line"><span class="selector-class">.page-ui-box</span> &#123;<span class="attribute">overflow</span>: hidden;<span class="attribute">border-left</span>: <span class="number">1px</span> solid <span class="number">#CCC</span>;&#125;</span><br><span class="line"><span class="selector-class">.page-ui-box</span> <span class="selector-tag">li</span> &#123;<span class="attribute">float</span>: left;<span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">25px</span>;<span class="attribute">height</span>: <span class="number">30px</span>;<span class="attribute">line-height</span>: <span class="number">30px</span>;<span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#CCC</span>;<span class="attribute">border-left</span>:none;<span class="attribute">cursor</span>: pointer;&#125;</span><br><span class="line"><span class="selector-class">.unable</span> &#123;<span class="attribute">background</span>: <span class="number">#EEE</span>;&#125;</span><br><span class="line"><span class="selector-class">.page-ui-box</span> <span class="selector-tag">a</span> &#123;<span class="attribute">text-decoration</span>: none;&#125;</span><br><span class="line"><span class="selector-class">.able</span> <span class="selector-tag">a</span> &#123;<span class="attribute">color</span>: blue;&#125;</span><br><span class="line"><span class="selector-class">.able</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;<span class="attribute">text-decoration</span>: underline;&#125;</span><br><span class="line"><span class="selector-tag">table</span>&#123;<span class="attribute">border-collapse</span>:collapse; <span class="attribute">border-spacing</span>:<span class="number">0</span>; <span class="attribute">border-left</span>:<span class="number">1px</span> solid <span class="number">#aaa</span>; <span class="attribute">border-top</span>:<span class="number">1px</span> solid <span class="number">#aaa</span>; &#125;</span><br><span class="line"><span class="selector-tag">td</span>&#123;<span class="attribute">border-right</span>:<span class="number">1px</span> solid <span class="number">#aaa</span>; <span class="attribute">border-bottom</span>:<span class="number">1px</span> solid <span class="number">#aaa</span>; <span class="attribute">padding</span>:<span class="number">3px</span> <span class="number">15px</span>; <span class="attribute">text-align</span>:left; <span class="attribute">color</span>:<span class="number">#3C3C3C</span>;&#125;</span><br></pre></td></tr></table></figure><h2 id="三、图片验证码类的封装"><a href="#三、图片验证码类的封装" class="headerlink" title="三、图片验证码类的封装"></a>三、图片验证码类的封装</h2><blockquote><p>libs/Verify文件夹</p></blockquote><p>1、Verify.class.php:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="keyword">namespace</span> <span class="title">libs</span>\<span class="title">Verify</span>;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Verify</span></span></span></span><br><span class="line"><span class="php">&#123; </span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $width=<span class="number">100</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $height=<span class="number">30</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $content=<span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $num=<span class="number">4</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $point=<span class="number">100</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">private</span> $line= <span class="number">4</span>;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span></span><br><span class="line">     /**</span><br><span class="line"> * 字母+数字的验证码生成</span><br><span class="line"><span class="php"> */</span></span><br><span class="line"><span class="php"><span class="comment">// 开启session</span></span></span><br><span class="line"><span class="php">session_start();</span></span><br><span class="line"><span class="php"><span class="comment">//1.创建黑色画布</span></span></span><br><span class="line"><span class="php">$image = imagecreatetruecolor(<span class="keyword">$this</span>-&gt;width, <span class="keyword">$this</span>-&gt;height);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//2.为画布定义(背景)颜色</span></span></span><br><span class="line"><span class="php">$bgcolor = imagecolorallocate($image, <span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//3.填充颜色</span></span></span><br><span class="line"><span class="php">imagefill($image, <span class="number">0</span>, <span class="number">0</span>, $bgcolor);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">// 4.设置验证码内容</span></span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//4.1 定义验证码的内容</span></span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//4.1 创建一个变量存储产生的验证码数据，便于用户提交核对</span></span></span><br><span class="line"><span class="php">$captcha = <span class="string">""</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="keyword">$this</span>-&gt;num; $i++) &#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// 字体大小</span></span></span><br><span class="line"><span class="php">    $fontsize = <span class="number">5</span>;</span></span><br><span class="line"><span class="php">    <span class="comment">// 字体颜色 随机生成字体颜色</span></span></span><br><span class="line"><span class="php">    $fontcolor = imagecolorallocate($image, mt_rand(<span class="number">0</span>, <span class="number">120</span>), mt_rand(<span class="number">0</span>, <span class="number">120</span>), mt_rand(<span class="number">0</span>, <span class="number">120</span>));</span></span><br><span class="line"><span class="php">    <span class="comment">// 设置字体内容</span></span></span><br><span class="line"><span class="php">    $fontcontent = substr(<span class="keyword">$this</span>-&gt;content, mt_rand(<span class="number">0</span>, strlen(<span class="keyword">$this</span>-&gt;content)), <span class="number">1</span>);</span></span><br><span class="line"><span class="php">    $captcha .= $fontcontent;</span></span><br><span class="line"><span class="php">    <span class="comment">// 显示的坐标</span></span></span><br><span class="line"><span class="php">    $x = ($i * <span class="keyword">$this</span>-&gt;width / <span class="keyword">$this</span>-&gt;num) + mt_rand(<span class="number">5</span>, <span class="number">10</span>);</span></span><br><span class="line"><span class="php">    $y = mt_rand(<span class="keyword">$this</span>-&gt;height/<span class="number">3</span>, <span class="keyword">$this</span>-&gt;height/<span class="number">2</span>);</span></span><br><span class="line"><span class="php">    <span class="comment">// 填充内容到画布中</span></span></span><br><span class="line"><span class="php">    imagestring($image, $fontsize, $x, $y, $fontcontent, $fontcolor);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$_SESSION[<span class="string">"captcha"</span>] = $captcha;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//4.3 设置背景干扰元素</span></span></span><br><span class="line"><span class="php"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="keyword">$this</span>-&gt;point; $i++) &#123;</span></span><br><span class="line"><span class="php">    $pointcolor = imagecolorallocate($image, mt_rand(<span class="number">50</span>, <span class="number">200</span>), mt_rand(<span class="number">50</span>, <span class="number">200</span>), mt_rand(<span class="number">50</span>, <span class="number">200</span>));</span></span><br><span class="line"><span class="php">    imagesetpixel($image, mt_rand(<span class="number">1</span>, <span class="keyword">$this</span>-&gt;width), mt_rand(<span class="number">1</span>, <span class="keyword">$this</span>-&gt;height), $pointcolor);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//4.4 设置干扰线</span></span></span><br><span class="line"><span class="php"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; <span class="keyword">$this</span>-&gt;line; $i++) &#123;</span></span><br><span class="line"><span class="php">    $linecolor = imagecolorallocate($image, mt_rand(<span class="number">50</span>, <span class="number">200</span>), mt_rand(<span class="number">50</span>, <span class="number">200</span>), mt_rand(<span class="number">50</span>, <span class="number">200</span>));</span></span><br><span class="line"><span class="php">    imageline($image, mt_rand(<span class="number">1</span>, <span class="keyword">$this</span>-&gt;width), mt_rand(<span class="number">1</span>, <span class="keyword">$this</span>-&gt;height), mt_rand(<span class="number">1</span>, <span class="keyword">$this</span>-&gt;width), mt_rand(<span class="number">1</span>, <span class="keyword">$this</span>-&gt;height), $linecolor);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="keyword">return</span> $image;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//6.输出图片到浏览器</span></span></span><br><span class="line"><span class="php"><span class="comment">// imagepng($image);</span></span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//7.销毁图片</span></span></span><br><span class="line"><span class="php"><span class="comment">// imagedestroy($image);</span></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">width</span><span class="params">($width)</span>  //设置验证码图片的宽度</span></span></span><br><span class="line"><span class="php">  &#123;  </span></span><br><span class="line"><span class="php"><span class="keyword">$this</span>-&gt;width=$width;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">height</span><span class="params">($height)</span>  //设置验证码图片的高度</span></span></span><br><span class="line"><span class="php">  &#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">$this</span>-&gt;height=$height;</span></span><br><span class="line"><span class="php">  <span class="keyword">return</span> <span class="keyword">$this</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setLine</span><span class="params">($line)</span>  //设置验证码图片的干扰线数量</span></span></span><br><span class="line"><span class="php">  &#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">$this</span>-&gt;line=$line;</span></span><br><span class="line"><span class="php">  <span class="keyword">return</span> <span class="keyword">$this</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setNum</span><span class="params">($num)</span> // 设置验证码的位数</span></span></span><br><span class="line"><span class="php">  &#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">$this</span>-&gt;num=$num;</span></span><br><span class="line"><span class="php">  <span class="keyword">return</span> <span class="keyword">$this</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setChars</span><span class="params">($content)</span>  //设置验证码出现的字符集， 比如设置 123456789,那么验证码中出现的字符只能是这个字符串中的某几个</span></span></span><br><span class="line"><span class="php">  &#123;</span></span><br><span class="line"><span class="php">  <span class="keyword">$this</span>-&gt;content=$content;</span></span><br><span class="line"><span class="php">  <span class="keyword">return</span> <span class="keyword">$this</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">  <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setPoint</span><span class="params">($point)</span>  // 设置验证码图片中出现的杂点数量</span></span></span><br><span class="line"><span class="php">  &#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">$this</span>-&gt;point=$point;</span></span><br><span class="line"><span class="php">    <span class="keyword">return</span> <span class="keyword">$this</span>;</span></span><br><span class="line"><span class="php">  &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>2、Verify类的实例verify.php：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//5.向浏览器输出图片头信息</span></span></span><br><span class="line"><span class="php"> header(<span class="string">'content-type:image/png'</span>);</span></span><br><span class="line"><span class="php">spl_autoload_register(<span class="function"><span class="keyword">function</span><span class="params">($class)</span></span>&#123; <span class="comment">//$class = libs\Db\Mysql</span></span></span><br><span class="line"><span class="php"><span class="comment">//libs\Db\Mysql -&gt; libs/Db/Mysql</span></span></span><br><span class="line"><span class="php">$class_path = str_replace(<span class="string">'\\'</span>, <span class="string">'/'</span>, $class);</span></span><br><span class="line"><span class="php">$class_path .= <span class="string">'.class.php'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">require_once</span> $class_path;</span></span><br><span class="line"><span class="php">&#125;);</span></span><br><span class="line"><span class="php"> <span class="keyword">use</span> <span class="title">libs</span>\<span class="title">Verify</span>\<span class="title">Verify</span>;</span></span><br><span class="line"><span class="php">    $verify=<span class="keyword">new</span> Verify();</span></span><br><span class="line"><span class="php">    $char=<span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"</span>;</span></span><br><span class="line"><span class="php">    $verifyhtml=$verify-&gt;width(<span class="number">200</span>)-&gt;height(<span class="number">80</span>)-&gt;setLine(<span class="number">6</span>)-&gt;setNum(<span class="number">6</span>)-&gt;setChars($char)-&gt;setPoint(<span class="number">500</span>)-&gt;show(); <span class="comment">//链式操作</span></span></span><br><span class="line"><span class="php">    </span></span><br><span class="line"><span class="php">    <span class="comment">//6.输出图片到浏览器</span></span></span><br><span class="line"><span class="php">    imagepng($verifyhtml);</span></span><br><span class="line"><span class="php">    <span class="comment">//7.销毁图片</span></span></span><br><span class="line"><span class="php">    imagedestroy($verifyhtml);</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="四、运用实例"><a href="#四、运用实例" class="headerlink" title="四、运用实例"></a>四、运用实例</h2><p>这里通过start.php文件来运用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//namespace "上级文件夹名称"</span></span></span><br><span class="line"><span class="php"><span class="comment">// require_once 'libs/Db/Mysql.class.php';</span></span></span><br><span class="line"><span class="php"><span class="comment">//引入命名空间</span></span></span><br><span class="line"><span class="php">spl_autoload_register(<span class="function"><span class="keyword">function</span><span class="params">($class)</span></span>&#123; <span class="comment">//$class = libs\Db\Mysql</span></span></span><br><span class="line"><span class="php"><span class="comment">//libs\Db\Mysql -&gt; libs/Db/Mysql</span></span></span><br><span class="line"><span class="php">$class_path = str_replace(<span class="string">'\\'</span>, <span class="string">'/'</span>, $class);</span></span><br><span class="line"><span class="php">$class_path .= <span class="string">'.class.php'</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">require_once</span> $class_path;</span></span><br><span class="line"><span class="php">&#125;);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">libs</span>\<span class="title">Db</span>\<span class="title">Mysql</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">use</span> <span class="title">libs</span>\<span class="title">Page</span>\<span class="title">Page</span>;</span></span><br><span class="line"><span class="php">    </span></span><br><span class="line"><span class="php">    $db = Mysql::init(); <span class="comment">//新建Mysql对象</span></span></span><br><span class="line"><span class="php">    $totals = $db-&gt;table(<span class="string">"contact"</span>)-&gt;field(<span class="string">"id"</span>)-&gt;count();</span></span><br><span class="line"><span class="php">    $pagesize = <span class="number">3</span>; <span class="comment">//每一页显示的数据条数</span></span></span><br><span class="line"><span class="php">    $page = <span class="keyword">new</span> Page($pagesize,$totals); <span class="comment">//新建Page对象</span></span></span><br><span class="line"><span class="php">    $pagehtml = $page-&gt;show();</span></span><br><span class="line"><span class="php">    $left = $page-&gt;getoffset();</span></span><br><span class="line"><span class="php">    $db-&gt;setDebug(<span class="keyword">true</span>);</span></span><br><span class="line"><span class="php">    $data=$db-&gt;table(<span class="string">"contact"</span>)-&gt;where(<span class="keyword">NULL</span>)-&gt;field(<span class="string">"*"</span>)-&gt;order(<span class="string">"id desc"</span>)-&gt;limit(<span class="string">"&#123;$left&#125;,&#123;$pagesize&#125;"</span>)-&gt;getList(); <span class="comment">//链式操作</span></span></span><br><span class="line"><span class="php">    <span class="comment">// $data = $db-&gt;getList('contact', NULL,"*", 'id desc', "&#123;$left&#125;, &#123;$pagesize&#125;");</span></span></span><br><span class="line"><span class="php">    <span class="comment">// var_dump($data);</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"libs/Page/page-ui.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>编号<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>姓名<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>工作<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>QQ<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>手机号码<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span>留言内容<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="php"><span class="meta">&lt;?php</span> <span class="keyword">foreach</span> ($data <span class="keyword">as</span> $key =&gt; $val) &#123; <span class="meta">?&gt;</span></span></span><br><span class="line">         <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="php"><span class="meta">&lt;?</span>=$val[<span class="string">'id'</span>]<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="php"><span class="meta">&lt;?</span>=$val[<span class="string">'userName'</span>]<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="php"><span class="meta">&lt;?</span>=$val[<span class="string">'job'</span>]<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="php"><span class="meta">&lt;?</span>=$val[<span class="string">'qqnum'</span>]<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="php"><span class="meta">&lt;?</span>=$val[<span class="string">'phone'</span>]<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="php"><span class="meta">&lt;?</span>=$val[<span class="string">'remark'</span>]<span class="meta">?&gt;</span></span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="php"><span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="php"><span class="meta">&lt;?</span>=$pagehtml<span class="meta">?&gt;</span></span> <span class="comment">&lt;!-- 显示分页样式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"http://localhost/space/verify.php"</span> <span class="attr">onclick</span>=<span class="string">"resetPic(this)"</span>&gt;</span> <span class="comment">&lt;!-- 显示图片验证码 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">    <span class="function"><span class="keyword">function</span> <span class="title">resetPic</span><span class="params">(obj)</span></span></span></span><br><span class="line"><span class="undefined">    &#123;</span></span><br><span class="line"><span class="javascript">        $(obj).attr(<span class="string">'src'</span>, <span class="string">"http://localhost/space/verify.php"</span>); <span class="comment">//点击二维码刷新</span></span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>附：本人建立test数据库contact表的sql文件：</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="keyword">test</span>; </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> contact( </span><br><span class="line">     <span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment, </span><br><span class="line">     userName <span class="built_in">char</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span> <span class="keyword">unique</span>, </span><br><span class="line">     job <span class="built_in">char</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>, </span><br><span class="line">     qqnum <span class="built_in">char</span>(<span class="number">10</span>) <span class="keyword">not</span> <span class="literal">null</span>, </span><br><span class="line">     phone <span class="built_in">char</span>(<span class="number">100</span>), </span><br><span class="line">     remark <span class="built_in">text</span> </span><br><span class="line">);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这篇文章中已经介绍了PHP连接数据库的方法以及最基本的对数据库的操作，但并没有实现模块化，所有的代码全都集中在表现页面中，造成了代码冗余，不仅不利于维护也不利于代码的重用性，那么在这篇文章中将用面向对象的知识对数据库的连接和基本操作方法进行封装，也简单地对地分页功能进行了封
      
    
    </summary>
    
    
      <category term="PHP" scheme="https://jdsheng.cn/tags/PHP/"/>
    
      <category term="数据库" scheme="https://jdsheng.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="验证码" scheme="https://jdsheng.cn/tags/%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>浅谈PHP面向对象编程</title>
    <link href="https://jdsheng.cn/2018/09/12/%E6%B5%85%E8%B0%88php%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
    <id>https://jdsheng.cn/2018/09/12/浅谈php面向对象编程/</id>
    <published>2018-09-12T14:02:21.376Z</published>
    <updated>2018-09-12T14:04:05.362Z</updated>
    
    <content type="html"><![CDATA[<p>本篇文章给大家分享的内容是关于浅谈PHP面向对象编程 ，有着一定的参考价值，有需要的朋友可以参考一下。</p><h2 id="一、PHP面向对象编程基础实践"><a href="#一、PHP面向对象编程基础实践" class="headerlink" title="一、PHP面向对象编程基础实践"></a>一、PHP面向对象编程基础实践</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line">/*</span><br><span class="line">*    通过对象的编程方式，可将实现生活中的一切事物以对象的形式表现出来。便于理解、维护、扩展等；</span><br><span class="line">*    本示例：定义一个“人”类</span><br><span class="line">*    $name : 对象中的成员属性，在此类中表示人的姓名</span><br><span class="line">*    say() : 对象中的成员方法，在此类中表示人说话的方法</span><br><span class="line">*    $this : PHP中的伪变量，表示自身的类</span><br><span class="line">*    __construct() : php中的魔术方法，构造函数，在实例化类时自动执行</span><br><span class="line">*    __destruct() : php中的魔术方法，析构函数，当类调用完成后自动执行</span><br><span class="line"><span class="php">*/</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $name;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $sex;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $age;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name,$sex,$age)</span> </span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;name = $name;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;sex = $sex;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;age = $age;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'大家好，我的名字叫'</span>.<span class="keyword">$this</span>-&gt;name.<span class="string">'，今年'</span>.<span class="keyword">$this</span>-&gt;age.<span class="string">'岁，我的性别是'</span>.<span class="keyword">$this</span>-&gt;sex;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;name = <span class="keyword">null</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;sex = <span class="keyword">null</span>;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;age = <span class="keyword">null</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">//实例化“人”类</span></span></span><br><span class="line"><span class="php">$male = <span class="keyword">new</span> Human(<span class="string">"张三"</span>,<span class="string">"男"</span>,<span class="string">"20"</span>);</span></span><br><span class="line"><span class="php"><span class="comment">//调用“人”类说话的方法</span></span></span><br><span class="line"><span class="php">$male-&gt;say();</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//输出结果：大家好，我的名字叫张三，今年20岁，我的性别是男</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="二、PHP面向对象高级编程实践"><a href="#二、PHP面向对象高级编程实践" class="headerlink" title="二、PHP面向对象高级编程实践"></a>二、PHP面向对象高级编程实践</h2><p><em>知识点：类的继承、方法重写、访问控制、static关键字、final关键字、数据访问、接口、多态、抽象类</em></p><p><strong>2.1、类的继承：extends 关键字</strong><br>例如：一员运行员、一位主持人，他们有人类共同的行为方法，但他们都有自己不同的特长专业。因此在编程时需要给他们创建一个父类并继承；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line">/*</span><br><span class="line">*    创建一个“人”类做为父类，继承的子类都拥有其父类的成员属性、方法</span><br><span class="line"><span class="php">*/</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $name;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"父类说话的方法，姓名："</span>.<span class="keyword">$this</span>-&gt;name.<span class="string">"\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"父类吃饭的方法\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line">/*</span><br><span class="line">*    创建一个“运动员”类，继承“人”类</span><br><span class="line">*    extends : 关键字，继承某个类</span><br><span class="line"><span class="php">*/</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Sport</span> <span class="keyword">extends</span> <span class="title">Human</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $type;    </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name,$type)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;name = $name;    <span class="comment">//给父类 $name 属性赋值</span></span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;type = $type;    </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;say();   <span class="comment">//调用父类“说话”的方法</span></span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"我在正跑步，我是一员"</span>.<span class="keyword">$this</span>-&gt;type.<span class="string">"运动员.....\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line">/*</span><br><span class="line">*    创建一个“主持人”类，继承“人”类</span><br><span class="line">*    extends : 关键字，继承某个类</span><br><span class="line"><span class="php">*/</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Host</span> <span class="keyword">extends</span> <span class="title">Human</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $television; </span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name,$television)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;name = $name;    </span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;television= $television;   </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">perform</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;eat();   <span class="comment">//调用父类“吃饭”的方法</span></span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"我在正表演一个节目，我是"</span>.<span class="keyword">$this</span>-&gt;television.<span class="string">"电视台的一名主持人.....\n"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//实例化“运动员”类</span></span></span><br><span class="line"><span class="php">$nba = <span class="keyword">new</span> Sport(<span class="string">"乔丹"</span>,<span class="string">"篮球"</span>);</span></span><br><span class="line"><span class="php">$nba-&gt;run();</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//实例化“主持人”类</span></span></span><br><span class="line"><span class="php">$tv = <span class="keyword">new</span> Host(<span class="string">"张三"</span>,<span class="string">"北京卫视"</span>);</span></span><br><span class="line"><span class="php">$tv-&gt;perform();</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//输出结果：</span></span></span><br><span class="line"><span class="php"><span class="comment">//父类说话的方法，姓名：乔丹 我在正跑步，我是一员篮球运动员..... </span></span></span><br><span class="line"><span class="php"><span class="comment">//父类吃饭的方法 我在正表演一个节目，我是北京卫视电视台的一名主持人.....</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>2.2、方法重写：子类重写父类的方法</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"父类说话的方法"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Sport</span> <span class="keyword">extends</span> <span class="title">Human</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">//重写父类“说话”的方法</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"子类说话的方法"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$nba = <span class="keyword">new</span> Sport();</span></span><br><span class="line"><span class="php">$nba-&gt;say();</span></span><br><span class="line"><span class="php"><span class="comment">//输出结果：子类说话的方法</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>2.3、访问控制：public 、 protected 、private 关键字</strong></p><p>public：定义公共的成员属性或方法，任何地方都可使用<br>protected : 定义受保护的成员属性或方法，只允许类本身或子类使用<br>private : 定义私有的成员属性或方法，只允许类的本身使用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $name;</span></span><br><span class="line"><span class="php">    <span class="keyword">protected</span> $sex;</span></span><br><span class="line"><span class="php">    <span class="keyword">private</span> $age;  </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">//实例化对象，给公共属性赋值可正常输出结果，外部不能给protected、private受保护的成员属性赋值或使用</span></span></span><br><span class="line"><span class="php">$worker = <span class="keyword">new</span> Human();</span></span><br><span class="line"><span class="php">$worker-&gt;name = <span class="string">"张三"</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $worker-&gt;name;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>2.4、static（静态）关键字</strong><br>1）、静态属性用于保存类的公有数据；<br>2）、静态方法里面只能访问静态属性或方法，不能使用 $this 伪变量；<br>3）、静态成员不需要通过 new 关键字来实例化对象就可访问使用；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> $name = <span class="string">"张三"</span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"我的姓名叫："</span>.<span class="keyword">self</span>::$name;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">//外部使用静态成员属性或方法</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> Human::$name;</span></span><br><span class="line"><span class="php">Human::say();</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//输出结果：张三  我的姓名叫：张三</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>2.5、final关键字：不允许成员方法被重写，不允许被继承</strong><br>例：1、对于父类“吃饭”这个方法，不希望子类重写它；2、对于“运动员”这个类，不希望它再创建子类；</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">final</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"父类吃饭的方法，不允许子类重写"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Sport</span> <span class="keyword">extends</span> <span class="title">Human</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"子类吃饭的方法。此时程序将会报致命错误"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">//创建一个类继承 Sport 这个类。此时程序也将会报致命错误。因为 Sport 类不允许再创建子类</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Sport</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> $name;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//实例化 Sport 类 ，调用 eat() 方法</span></span></span><br><span class="line"><span class="php">$nba = <span class="keyword">new</span> Sport();</span></span><br><span class="line"><span class="php">$nba-&gt;eat();</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//实例化 Student 类 ，给 name 属性负值</span></span></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> Student();</span></span><br><span class="line"><span class="php">$obj-&gt;name = <span class="string">"张三"</span>;</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//输出结果：Fatal error: Cannot override final method Human::eat() in ******.php on line 15</span></span></span><br><span class="line"><span class="php"><span class="comment">//Fatal error: Class Student may not inherit from final class (Sport) in ****.php on line 20</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>2.6、数据访问：$this 、 self 、parent 关键字</strong><br>$this ： 伪变量，代表类的本身，可访问本类及父类中的成员属性与方法。<br>self ： 访问类中的静态成员属性或方法<br>parent ：访问父类的成员属性或方法</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> $name = <span class="string">"张三"</span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Sport</span> <span class="keyword">extends</span> <span class="title">Human</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getParentName</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="keyword">parent</span>::$name;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">()</span> </span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">       <span class="keyword">self</span>::getParentName(); </span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> Sport();</span></span><br><span class="line"><span class="php">$obj-&gt;get();</span></span><br><span class="line"><span class="php"><span class="comment">//输出结果：张三</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>2.7、接口：把不同类的共同行为方法进行定义，但不具体实现，由子类来实现具体的方法；</strong><br>例如：人会吃饭，动物也会吃饭，甚至有些植物也会吃饭，但他们吃饭的方式不一样，因此这时需要定义一个接口类，具体的方式由子类来实现；<br>定义接口关键字：interface<br>实现接口方法关键字：implements</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//定义一个接口类，有吃饭的方法，但不具体实现。</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">interface</span> <span class="title">ICanEat</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span><span class="params">($food)</span></span>;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Human</span> <span class="keyword">implements</span> <span class="title">ICanEat</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="comment">//eat()方法必须由子类来实现，否则程序将报致命错误</span></span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span><span class="params">($food)</span> </span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"I'm eating "</span>.$food;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Animal</span> <span class="keyword">implements</span> <span class="title">ICanEat</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span><span class="params">($food)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"It's eating "</span>.$food;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">//实例化一个“人”类</span></span></span><br><span class="line"><span class="php">$people = <span class="keyword">new</span> Human();</span></span><br><span class="line"><span class="php">$people-&gt;eat(<span class="string">'rice'</span>);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//实例化一个“动物”类</span></span></span><br><span class="line"><span class="php">$monkey = <span class="keyword">new</span> Animal();</span></span><br><span class="line"><span class="php">$monkey-&gt;eat(<span class="string">'banana'</span>);</span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="comment">//输出结果：I'm eating rice</span></span></span><br><span class="line"><span class="php"><span class="comment">// It's eating banana</span></span></span><br><span class="line"><span class="php"> </span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>2.8、多态：比如接口A有两个实现B和C，B和C对A接口里面定义的方法实现可以是不同的，这种现象称之为多态；</strong><br>上述实例中，ICanEat接口定义了一个eat()方法，人类吃米饭，猴子吃香蕉。他们都实现了一个“吃”的方法，但他们吃东西有不同的行为，称之为多态；</p><p><strong>2.9、抽象类：介入接口与类的定义之间，允许类里面一部分方法不实现，实现一部分有相同功能且不会更改的方法。然而接口类里面不允许有任何实现的方法。</strong><br>例如：人和动物都具有吃饭与呼吸的方法，除吃饭不同以外，呼吸方法是相同的，此时需要定义一个抽象类来实现。<br>定义抽象类关键字：abstract</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//定义一个抽象类，里面有吃饭和呼吸的方法。呼吸方法需要在抽象类中具体实现</span></span></span><br><span class="line"><span class="php"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ICanEat</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span><span class="params">($food)</span></span>;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">breath</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">'Breath use the air...'</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Human</span> <span class="keyword">extends</span> <span class="title">ICanEat</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span><span class="params">($food)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"I'm eating "</span>.$food;</span></span><br><span class="line"><span class="php">        <span class="keyword">$this</span>-&gt;breath();</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="comment">//实例化“人”类</span></span></span><br><span class="line"><span class="php">$people = <span class="keyword">new</span> Human();</span></span><br><span class="line"><span class="php">$people-&gt;eat(<span class="string">'rice'</span>);</span></span><br><span class="line"><span class="php"><span class="comment">//输出结果:I'm eating rice Breath use the air...</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="三、PHP面向对象编程特殊实践"><a href="#三、PHP面向对象编程特殊实践" class="headerlink" title="三、PHP面向对象编程特殊实践"></a>三、PHP面向对象编程特殊实践</h2><p>PHP语言特定的一些魔术方法：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="class"><span class="keyword">class</span> <span class="title">Object</span></span></span></span><br><span class="line"><span class="php">&#123;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"当类在被实例化的时候，自动执行该函数"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">return</span> <span class="string">"当对象被当作字符串形式输出时，自动执行该函数"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span><span class="params">($value)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"当对象被当作函数调用时，自动执行该函数"</span>.$value;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line">    /*</span><br><span class="line">    *    当对象访问不存在的方法时，自动执行该函数。也称之为“方法重载”</span><br><span class="line">    *    $fun : 方法名称</span><br><span class="line">    *    $param : 传递的参数</span><br><span class="line"><span class="php">    */</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($fun,$param)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"调用"</span>.$fun.<span class="string">"方法不存在，传递的参数"</span>.implode(<span class="string">','</span>,$param);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line">    /*</span><br><span class="line">    *    当对象访问不存在的静态方法时，自动执行该函数。</span><br><span class="line">    *    $fun : 方法名称</span><br><span class="line">    *    $param : 传递的参数</span><br><span class="line"><span class="php">    */</span></span><br><span class="line"><span class="php">    <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">__callStatic</span><span class="params">($fun,$param)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"调用"</span>.$fun.<span class="string">"静态方法不存在，传递的参数"</span>.implode(<span class="string">','</span>,$param);</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"当读取对象中不可访问（未定义）的属性值时，自动调用该函数。"</span>.$key.<span class="string">"属性不可访问或未定义"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span><span class="params">($key,$value)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">         <span class="keyword">echo</span> <span class="string">"当给对象中不可访问（未定义）的属性赋值时，自动调用该函数。"</span>.$key.<span class="string">"属性不可访问或未定义，值"</span>.$value;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__isset</span><span class="params">($key)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"判断对象中的属性不存在时，自动执行该函数。属性："</span>.$key.<span class="string">"值未定义"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unset</span><span class="params">($key)</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"释放对象中的不存在的属性值时，自动执行该函数。属性："</span>.$key.<span class="string">"值未定义"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"当对象被克隆时，自动执行该函数。"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span></span><br><span class="line"><span class="php">    &#123;</span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"当对象执行完成后，自动执行该函数"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php">$obj = <span class="keyword">new</span> Object();    <span class="comment">//实例化对象时，调用__construct()方法</span></span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $obj;              <span class="comment">//将对象以字符串形式输出时，调用__toString()方法</span></span></span><br><span class="line"><span class="php">$obj(<span class="number">123</span>);              <span class="comment">//当对象以函数形式调用时，执行__invoke()方法</span></span></span><br><span class="line"><span class="php">$obj-&gt;runTest();        <span class="comment">//当调用对象中不存在的方法时，执行__call()方法</span></span></span><br><span class="line"><span class="php">$obj::runTest();        <span class="comment">//当调用对象中不存在的静态方法时，执行__callStatic()方法</span></span></span><br><span class="line"><span class="php">$obj-&gt;name;             <span class="comment">//当调用对象中不存在的成员属性时，执行__get()方法</span></span></span><br><span class="line"><span class="php">$obj-&gt;name = <span class="string">"张三"</span>;    <span class="comment">//当给对象中不存在的成员属性赋值时，执行__set()方法</span></span></span><br><span class="line"><span class="php"><span class="keyword">isset</span>($obj-&gt;name) ? <span class="number">1</span> : <span class="number">0</span>;     <span class="comment">//判断对象中不存在的成员属性时，执行__isset()方法</span></span></span><br><span class="line"><span class="php"><span class="keyword">unset</span>($obj-&gt;name);      <span class="comment">//释放对象中的不存在的属性值时，执行__unset()方法</span></span></span><br><span class="line"><span class="php">$obj2 = <span class="keyword">clone</span> $obj;     <span class="comment">//当对象被克隆时，执行__clone()方法</span></span></span><br><span class="line"><span class="php">                        <span class="comment">//对象执行完毕，执行__destruct()方法</span></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本篇文章给大家分享的内容是关于浅谈PHP面向对象编程 ，有着一定的参考价值，有需要的朋友可以参考一下。&lt;/p&gt;
&lt;h2 id=&quot;一、PHP面向对象编程基础实践&quot;&gt;&lt;a href=&quot;#一、PHP面向对象编程基础实践&quot; class=&quot;headerlink&quot; title=&quot;一、P
      
    
    </summary>
    
    
      <category term="PHP" scheme="https://jdsheng.cn/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>用jQuery实现简单的图片轮播效果</title>
    <link href="https://jdsheng.cn/2018/09/09/%E7%94%A8jQuery%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E5%9B%BE%E7%89%87%E8%BD%AE%E6%92%AD%E6%95%88%E6%9E%9C%20/"/>
    <id>https://jdsheng.cn/2018/09/09/用jQuery实现简单图片轮播效果 /</id>
    <published>2018-09-09T13:22:03.077Z</published>
    <updated>2018-09-10T04:24:19.217Z</updated>
    
    <content type="html"><![CDATA[<p>以下代码使用了jQuery来实现简单的图片轮播效果：</p><h2 id="html部分："><a href="#html部分：" class="headerlink" title="html部分："></a><strong>html部分：</strong></h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"slider"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"slider_list"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"4.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"5.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"6.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"7.jpeg"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"8.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"slider_icon"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"btn btn_act"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"btn"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"arrow left"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"slider_left"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:;"</span> <span class="attr">class</span>=<span class="string">"arrow right"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"slider_right"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="css部分："><a href="#css部分：" class="headerlink" title="css部分："></a><strong>css部分：</strong></h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#slider</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">750px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">450px</span>;</span><br><span class="line"><span class="attribute">margin</span>: <span class="number">10%</span> auto;</span><br><span class="line"><span class="attribute">position</span>: relative;</span><br><span class="line"><span class="attribute">border</span>: <span class="number">0px</span> red solid</span><br><span class="line">    &#125;</span><br><span class="line"><span class="selector-id">#slider</span> <span class="selector-tag">img</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">750px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">450px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">li</span>&#123;</span><br><span class="line"><span class="attribute">list-style</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.slider_list</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.slider_list</span> <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.arrow</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line"><span class="attribute">width</span>:<span class="number">40px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">60px</span>;</span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(0,0,0,.2);</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">top</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">margin-top</span>: -<span class="number">40px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.left</span>&#123;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.right</span>&#123;</span><br><span class="line"><span class="attribute">right</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.arrow</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">15px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">15px</span>;</span><br><span class="line"><span class="attribute">border-bottom</span>: <span class="number">2px</span> solid <span class="number">#fff</span>;</span><br><span class="line"><span class="attribute">border-left</span>: <span class="number">2px</span> solid <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.slider_left</span>&#123;</span><br><span class="line"><span class="attribute">margin-top</span>:<span class="number">25px</span>;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">15px</span>;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(45deg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.slider_right</span>&#123;</span><br><span class="line"><span class="attribute">margin-top</span>:<span class="number">25px</span>;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">5px</span>;</span><br><span class="line"><span class="attribute">transform</span>: <span class="built_in">rotate</span>(-135deg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.arrow</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">background</span>: <span class="number">#444</span>&#125;</span><br><span class="line"><span class="selector-id">#slider</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.arrow</span>&#123;<span class="attribute">display</span>:block;&#125;</span><br><span class="line"><span class="selector-id">#slider</span><span class="selector-pseudo">:hover</span> <span class="selector-class">.arrow</span> <span class="selector-tag">span</span>&#123;<span class="attribute">display</span>:block;&#125;</span><br><span class="line"><span class="selector-class">.slider_icon</span>&#123;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">195px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line"><span class="attribute">background-color</span>:<span class="built_in">hsla</span>(0,0%,100%,.3);</span><br><span class="line"><span class="attribute">position</span>: absolute;</span><br><span class="line"><span class="attribute">bottom</span>: <span class="number">0px</span>;</span><br><span class="line"><span class="attribute">left</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">margin-left</span>: -<span class="number">100px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line"><span class="attribute">z-index</span>: <span class="number">2</span>;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.slider_icon</span> <span class="selector-tag">i</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: inline-block;</span><br><span class="line"><span class="attribute">width</span>: <span class="number">12px</span>;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">12px</span>;</span><br><span class="line"><span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line"><span class="attribute">margin-right</span>: <span class="number">11px</span>;</span><br><span class="line"><span class="attribute">margin-left</span>: <span class="number">11px</span>;</span><br><span class="line"><span class="attribute">margin-top</span>: <span class="number">13px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.slider_icon</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">background-color</span>:<span class="built_in">rgba</span>(0,0,0,.4);&#125;</span><br><span class="line"><span class="selector-class">.btn</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.btn_act</span>&#123;</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#FCD705</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="js部分："><a href="#js部分：" class="headerlink" title="js部分："></a><strong>js部分：</strong></h2><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">var count=<span class="number">0</span>;</span><br><span class="line">var $li=$(<span class="string">".slider_list&gt;li"</span>);</span><br><span class="line">var timer=setInterval(<span class="string">"next()"</span>,<span class="number">4000</span>);</span><br><span class="line">function <span class="keyword">next</span>() &#123;</span><br><span class="line">count++;</span><br><span class="line"><span class="keyword">if</span> (count==$li.length) &#123;</span><br><span class="line">count=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">$li.e<span class="string">q(count)</span>.fadeIn().siblings().fadeOut();</span><br><span class="line">$(<span class="string">".slider_icon&gt;i"</span>).e<span class="string">q(count)</span>.addClass(<span class="string">'btn_act'</span>).siblings().removeClass(<span class="string">'btn_act'</span>);</span><br><span class="line">&#125;</span><br><span class="line">$(<span class="string">".right"</span>).click(function()&#123;<span class="keyword">next</span>();&#125;);</span><br><span class="line">$(<span class="string">".left"</span>).click(function()&#123;</span><br><span class="line">count--;</span><br><span class="line"><span class="keyword">if</span> (count == -<span class="number">1</span>) &#123;</span><br><span class="line">count=$li.length-<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">$li.e<span class="string">q(count)</span>.fadeIn().siblings().fadeOut();</span><br><span class="line">$(<span class="string">".slider_icon&gt;i"</span>).e<span class="string">q(count)</span>.addClass(<span class="string">'btn_act'</span>).siblings().removeClass(<span class="string">'btn_act'</span>);</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">".slider_icon&gt;i"</span>).mouseenter(function()&#123;</span><br><span class="line">$(this).addClass(<span class="string">'btn_act'</span>).siblings().removeClass(<span class="string">'btn_act'</span>);</span><br><span class="line">$li.e<span class="string">q($(this)</span>.index()).fadeIn().siblings().fadeOut();</span><br><span class="line">count=$(this).index();</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;以下代码使用了jQuery来实现简单的图片轮播效果：&lt;/p&gt;
&lt;h2 id=&quot;html部分：&quot;&gt;&lt;a href=&quot;#html部分：&quot; class=&quot;headerlink&quot; title=&quot;html部分：&quot;&gt;&lt;/a&gt;&lt;strong&gt;html部分：&lt;/strong&gt;&lt;/h2&gt;&lt;f
      
    
    </summary>
    
    
      <category term="jQuery" scheme="https://jdsheng.cn/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客NexT主题SEO优化</title>
    <link href="https://jdsheng.cn/2018/07/29/Hexo%E5%8D%9A%E5%AE%A2NexT%E4%B8%BB%E9%A2%98SEO%E4%BC%98%E5%8C%96/"/>
    <id>https://jdsheng.cn/2018/07/29/Hexo博客NexT主题SEO优化/</id>
    <published>2018-07-28T16:57:12.926Z</published>
    <updated>2018-07-28T17:33:42.168Z</updated>
    
    <content type="html"><![CDATA[<p>刚搭建完博客，发现自己发表的文章在谷歌或者百度都搜索不到，今天看了一些文章，原来是需要seo优化的，所以就来总结一下seo优化的方法，让自己的博文能在谷歌百度上搜索到。<br><em>本文主要以谷歌搜索为主。</em></p><h2 id="添加站点地图"><a href="#添加站点地图" class="headerlink" title="添加站点地图"></a>添加站点地图</h2><p><strong>–安装sitemap站点地图自动生成插件</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-generator-sitemap <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-baidu-sitemap <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p><strong>–修改站点配置文件</strong><br>将sitemap文件添加到站点配置文件_config.yml中，并修改url字段的值，其值默认为<a href="https://yoursite.com" target="_blank" rel="noopener">https://yoursite.com</a>(你的博客域名）。</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sitemap</span>: </span><br><span class="line">  <span class="attribute">path</span>: sitemap.xml</span><br><span class="line"><span class="attribute">baidusitemap</span>:</span><br><span class="line">  <span class="attribute">path</span>: baidusitemap.xml</span><br><span class="line"></span><br><span class="line"><span class="attribute">url</span>: <span class="attribute">https</span>:<span class="comment">//abner0101.github.io</span></span><br></pre></td></tr></table></figure><p>配置好后，执行hexo g 就能在站点public\目录中生成sitemap.xml 和 baidusitemap.xml了;其中第一个是一会要提交给google的，后面那个看名字当然就是提交给Baidu的了；</p><h2 id="添加蜘蛛协议"><a href="#添加蜘蛛协议" class="headerlink" title="添加蜘蛛协议"></a>添加蜘蛛协议</h2><p>在站点source文件夹下新建robots.txt文件，文件内容如下：（参考我的）</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">User-<span class="string">agent:</span> *</span><br><span class="line"><span class="string">Allow:</span> /</span><br><span class="line"><span class="string">Allow:</span> <span class="regexp">/archives/</span></span><br><span class="line"><span class="string">Allow:</span> <span class="regexp">/categories/</span></span><br><span class="line"><span class="string">Allow:</span> <span class="regexp">/tags/</span> </span><br><span class="line"><span class="string">Allow:</span> <span class="regexp">/resources/</span> </span><br><span class="line"><span class="string">Disallow:</span> <span class="regexp">/vendors/</span></span><br><span class="line"><span class="string">Disallow:</span> <span class="regexp">/js/</span></span><br><span class="line"><span class="string">Disallow:</span> <span class="regexp">/css/</span></span><br><span class="line"><span class="string">Disallow:</span> <span class="regexp">/fonts/</span></span><br><span class="line"><span class="string">Disallow:</span> <span class="regexp">/vendors/</span></span><br><span class="line"><span class="string">Disallow:</span> <span class="regexp">/fancybox/</span></span><br><span class="line"></span><br><span class="line"><span class="string">Sitemap:</span> <span class="string">https:</span><span class="comment">//abner0101.github.io/sitemap.xml</span></span><br><span class="line"><span class="string">Sitemap:</span> <span class="string">https:</span><span class="comment">//abner0101.github.io/baidusitemap.xml</span></span><br></pre></td></tr></table></figure><blockquote><p>其中Allow后面的就是你的menu<br>请自行将abner0101.github.io改成自己的域名，然后hexo d -g提交一下</p></blockquote><h2 id="提交站点到Google"><a href="#提交站点到Google" class="headerlink" title="提交站点到Google"></a>提交站点到Google</h2><p>打开<a href="https://www.google.com/webmasters/#?modal_active=none" target="_blank" rel="noopener">Google Search Console</a>，根据提示注册好之后，添加你的博客域名。<br><img src="https://www.github.com/hoxis/token4md/raw/master/20171227182234.gif" alt="添加博客域名"></p><h2 id="站点验证"><a href="#站点验证" class="headerlink" title="站点验证"></a>站点验证</h2><p>我选择了备用方法中的HTML 标记，将给出的元标记复制到\themes\hexo-theme-next\layout_partials\head.swig文件中。添加后运行hexo d -g将改动提交。稍后就可以验证成功了。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta <span class="attribute">charset</span>=<span class="string">"UTF-8"</span>/&gt;</span><br><span class="line">&lt;meta <span class="attribute">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attribute">content</span>=<span class="string">"IE=edge"</span> /&gt;</span><br><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"viewport"</span> <span class="attribute">content</span>=<span class="string">"width=device-width, initial-scale=1, maximum-scale=1"</span>/&gt;</span><br><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"theme-color"</span> <span class="attribute">content</span>=<span class="string">"&#123;&#123; theme.android_chrome_color &#125;&#125;"</span>&gt;</span><br><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"google-site-verification"</span> <span class="attribute">content</span>=<span class="string">"xxxxxxxxxxxxx"</span> /&gt;</span><br><span class="line">&lt;meta <span class="attribute">name</span>=<span class="string">"baidu-site-verification"</span> <span class="attribute">content</span>=<span class="string">"xxxxxxxxx"</span> /&gt;</span><br></pre></td></tr></table></figure><h2 id="测试robots-txt"><a href="#测试robots-txt" class="headerlink" title="测试robots.txt"></a>测试robots.txt</h2><p>点击左侧的robots.txt测试工具，根据提示提交你的robots.txt，其实刚才我们已经提交了。<br><img src="https://www.github.com/hoxis/token4md/raw/master/20171227183005.gif" alt=""></p><blockquote><p>注意要0错误才可以，如果有错误的话，会有提示，改正确就可以了。</p></blockquote><h2 id="提交站点地图"><a href="#提交站点地图" class="headerlink" title="提交站点地图"></a>提交站点地图</h2><p>还记得我们刚才创建创建sitemap.xml文件吧,现在它要派上用场了。点击左侧工具栏的站点地图<br><img src="https://www.github.com/hoxis/token4md/raw/master/20171227183912.gif" alt="这里写图片描述"></p><h2 id="Google-抓取方式"><a href="#Google-抓取方式" class="headerlink" title="Google 抓取方式"></a>Google 抓取方式</h2><p>提交站点地图之后，点击左侧的Google 抓取方式<br><img src="https://upload-images.jianshu.io/upload_images/2029141-e62d9b69fee897f6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt="这里写图片描述"></p><p>这一步很重要！这一不很重要！这一步很重要！<br><img src="https://upload-images.jianshu.io/upload_images/2029141-1400d6c78c881aab.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/700" alt="这里写图片描述"><br>在这里我们填上我们需要抓取的url,不填这表示抓取首页，抓取方式可以选择桌面，智能手机等等，自行根据需要选择。填好url之后，点击抓取。<br>然后可能会出现几种情况，如:完成、部分完成、重定向等，自由这三种情况是可以提交的。<br>提交完成后，提交至索引，根据提示操作就可以了。</p><h2 id="网站结构自身优化"><a href="#网站结构自身优化" class="headerlink" title="网站结构自身优化"></a>网站结构自身优化</h2><p><strong>出站链接添加nofollow标签</strong><br>网络爬虫会在当前页面搜索所有的链接，然后一个个查看，所以就很有可能跳到别的网站就不回来了。这个时候就需要nofollow起作用了。</p><blockquote><p>nofollow标签是由谷歌领头创新的一个反垃圾链接的标签，并被百度、yahoo等各大搜索引擎广泛支持，引用nofollow标签的目的是：用于指示搜索引擎不要追踪（即抓取）网页上的带有nofollow属性的任何出站链接，以减少垃圾链接的分散网站权重。</p></blockquote><p><strong>修改footer.swig文件</strong><br>路径在your-hexo-site\themes\next\layout_partials，将下面代码中的a标签加上rel=”external nofollow”属性。</p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; __(<span class="name">'footer.powered'</span>, '&lt;a rel=<span class="string">"external nofollow"</span> class=<span class="string">"theme-link"</span> target=<span class="string">"_blank"</span> href=<span class="string">"https://hexo.io"</span>&gt;Hexo&lt;/a&gt;') &#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a <span class="attribute">rel</span>=<span class="string">"external nofollow"</span> <span class="attribute">class</span>=<span class="string">"theme-link"</span> <span class="attribute">target</span>=<span class="string">"_blank"</span> <span class="attribute">href</span>=<span class="string">"https://github.com/iissnan/hexo-theme-next"</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>修改sidebar.swig文件</strong><br>路径在your-hexo-site\themes\next\layout_macro，将下面代码中的a标签加上rel=”external nofollow”属性</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://creativecommons.org/</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.creative_commons === 'zero' %&#125;</span><span class="xml"><span class="tag"><span class="string">publicdomain/zero/1.0</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">else</span></span> %&#125;</span><span class="xml"><span class="tag"><span class="string">licenses/</span></span></span><span class="template-variable">&#123;&#123; theme.creative_commons &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">/4.0</span></span></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"><span class="tag"><span class="string">/"</span> <span class="attr">rel</span>=<span class="string">"external nofollow"</span> <span class="attr">class</span>=<span class="string">"cc-opacity"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; link &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">title</span>=<span class="string">"</span></span></span><span class="template-variable">&#123;&#123; name &#125;&#125;</span><span class="xml"><span class="tag"><span class="string">"</span> <span class="attr">rel</span>=<span class="string">"external nofollow"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span></span><span class="template-variable">&#123;&#123; name &#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a <span class="attribute">rel</span>=<span class="string">"external nofollow"</span> <span class="attribute">href</span>=<span class="string">"&#123;&#123; link.split('||')[0] | trim &#125;&#125;"</span> <span class="attribute">target</span>=<span class="string">"_blank"</span> <span class="attribute">title</span>=<span class="string">"&#123;&#123; name &#125;&#125;"</span>&gt;</span><br></pre></td></tr></table></figure><p>至此，seo优化得差不多了，还有很多可以优化的地方，博主日后再更新。马上上google搜索一下你的关键词和博客title测试一下吧！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;刚搭建完博客，发现自己发表的文章在谷歌或者百度都搜索不到，今天看了一些文章，原来是需要seo优化的，所以就来总结一下seo优化的方法，让自己的博文能在谷歌百度上搜索到。&lt;br&gt;&lt;em&gt;本文主要以谷歌搜索为主。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;添加站点地图&quot;&gt;&lt;a href
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://jdsheng.cn/tags/hexo/"/>
    
      <category term="Next" scheme="https://jdsheng.cn/tags/Next/"/>
    
      <category term="seo优化" scheme="https://jdsheng.cn/tags/seo%E4%BC%98%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>记Hexo + Github Pages博客搭建</title>
    <link href="https://jdsheng.cn/2018/07/27/%E8%AE%B0Hexo%20+%20Github%20pages%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    <id>https://jdsheng.cn/2018/07/27/记Hexo + Github pages博客搭建/</id>
    <published>2018-07-27T15:18:24.417Z</published>
    <updated>2018-09-13T10:47:19.975Z</updated>
    
    <content type="html"><![CDATA[<p>很早之前就听说可以通过github pages来搭建博客，但是由于种种原因（就是懒），迟迟没有付诸行动，终于，趁着暑假，开始了我的hexo+github pages 搭建博客的踩坑记，折腾了两天，终于成功搭建好了博客，接下来，开始分享搭建本博客的过程中以及各种坑。。。</p><h2 id="用Hexo-Gitpages的原因"><a href="#用Hexo-Gitpages的原因" class="headerlink" title="用Hexo + Gitpages的原因"></a>用Hexo + Gitpages的原因</h2><ul><li>不用配置服务器</li><li>不用数据库</li><li>访问速度相当快</li><li>没有安全性可言</li><li>使用户可更注重博客内容</li><li>支持markdown<br>还有就是hexo相对来说轻巧一些，生成文章的速度也比较快（静态博客生成页面时都是要整站生成，所以，页面越多，速度就越慢）</li></ul><h2 id="从hexo开始"><a href="#从hexo开始" class="headerlink" title="从hexo开始"></a>从hexo开始</h2><p>首先本地得装上了node.js、git和hexo</p><p>安装git：<a href="https://git-scm.com/" target="_blank" rel="noopener">git</a></p><p>安装nodejs：<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js官网</a></p><p>hexo：<a href="https://hexo.io/" target="_blank" rel="noopener">hexo官网</a></p><p>hexo使用npm安装（过程如下）</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install </span>hexo-cli -g</span><br><span class="line">hexo init <span class="keyword">blog</span></span><br><span class="line"><span class="keyword">cd </span><span class="keyword">blog</span></span><br><span class="line"><span class="keyword">hexo </span>server</span><br></pre></td></tr></table></figure><p>然后打开<a href="http://localhost:4000/就可以查看效果了。" target="_blank" rel="noopener">http://localhost:4000/就可以查看效果了。</a><br>如果4000端口打不开，可以通过以下命令更改端口访问(改为3000）</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s -<span class="selector-tag">p</span> <span class="number">3000</span></span><br></pre></td></tr></table></figure><p><em>注</em>：Hexo依赖Node.js和Git，需要先安装。<br><em>hexo的使用可参详<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官网文档</a>。</em></p><p>常用命令：</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo g  生成静态博客，即重新生成<span class="keyword">public</span>文件夹</span><br><span class="line">hexo s  本地预览调试 (一般组合使用 hexo g &amp;&amp; hexo s)</span><br><span class="line">hexo d (发布到github)</span><br><span class="line">hexo n (执行该命令之后在source/_posts目录下产生&lt; blog <span class="keyword">name</span> &gt;.md文件，这是你的一篇新博客。可以在markdown工具下编写，markdown工具在网上搜有一大堆，比如本博主使用的csdn的markdown工具，具体怎么使用也可以自己百度啦~）</span><br></pre></td></tr></table></figure><h2 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h2><p>在github上创建一个仓库，仓库必须命名为：你的github账号.github.io<br>(例如我的账号为Abner0101，所以我的仓库名为：Abner0101.github.io)</p><p>配置hexo  config.yml，修改Deployment</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repo</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:你的帐号/你的帐号.github.com.git</span><br><span class="line">  <span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure><p>然后执行命令：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo clean</span></span><br><span class="line"><span class="attribute">hexo g</span></span><br><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure><p>此时，在博客的根目录下会生成一个文件夹：.deploy</p><p>然后我们把这个文件夹里面的文件都push到刚才新建那个项目就OK了。几分钟过后，就可以打开：你的用户名.github.io 看到你的博客了。</p><h2 id="绑定域名"><a href="#绑定域名" class="headerlink" title="绑定域名"></a>绑定域名</h2><p>在项目的根目录，新建名为CNAME的文件，内容为：你的域名，例如我的就是：jdsheng.cn<br>再到把你的域名指向你的用户名.github.io，几分钟过后，就可以看到成功的诞生了。</p><h2 id="NexT主题与第三方服务"><a href="#NexT主题与第三方服务" class="headerlink" title="NexT主题与第三方服务"></a>NexT主题与第三方服务</h2><p>我使用的主题是next，在你的博客根目录下gitbash，安装next主题</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/iissnan/hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure><p>打开<strong><em>站点配置文件</em></strong>(_config.yml)，增加一行：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: <span class="keyword">next</span></span><br></pre></td></tr></table></figure><p>进入themes/next，修改<strong><em>主题配置文件</em></strong> _config.yml 定位到scheme参数来选择自己喜欢的主题风格：</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">scheme:</span> Mist</span><br></pre></td></tr></table></figure><p>关于next主题更多的配置（添加评论，分享，喜欢，添加头像等功能）可以参考<a href="https://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT使用文档</a></p><h2 id="关于更换电脑，如何继续写博客"><a href="#关于更换电脑，如何继续写博客" class="headerlink" title="关于更换电脑，如何继续写博客"></a>关于更换电脑，如何继续写博客</h2><p>1.将你原来的电脑上已经配置好的源代码项目拷贝到你新的电脑，注意，无需拷贝全部，只需要拷贝一下几个目录：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">_config.yml</span><br><span class="line">package.json</span><br><span class="line">scaffolds/</span><br><span class="line">source/</span><br><span class="line">themes/</span><br></pre></td></tr></table></figure><p>将这些目录放在一个目录下，例如：blog/</p><p>2.在你的新电脑上配置hexo环境：安装git、安装node.js<br>3.安装hexo，执行命令：</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> -g hexo</span><br></pre></td></tr></table></figure><p>4.安装好之后，在hexo目录下gitbash，执行命令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-sitemap <span class="comment">--save</span></span><br></pre></td></tr></table></figure><p>5.部署，执行命令：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">　<span class="attribute">h</span><span class="attribute">e</span><span class="attribute">x</span><span class="attribute">o</span> <span class="attribute">g</span></span><br><span class="line"><span class="attribute">hexo d</span></span><br></pre></td></tr></table></figure><blockquote><p>在执行第5步时，可能会出错，不知道你们会不会遇到，反正我是遇到了，在部署提交代码的时候出现了这个问题：</p></blockquote><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*** Please tell <span class="keyword">me</span> who you are.</span><br><span class="line">Run</span><br><span class="line">  git config --<span class="keyword">global</span> user.email <span class="string">"you@example.com"</span></span><br><span class="line">  git config --<span class="keyword">global</span> user.name <span class="string">"Your Name"</span></span><br><span class="line"><span class="keyword">to</span> <span class="keyword">set</span> your account<span class="comment">'s default identity.</span></span><br><span class="line">Omit --<span class="keyword">global</span> <span class="keyword">to</span> <span class="keyword">set</span> the identity only <span class="keyword">in</span> this repository.</span><br></pre></td></tr></table></figure><p>所以解决方法是当出现这个上述提示后 接着补充<br>你在命令行中执行</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git<span class="built_in"> config </span>--global user.email  <span class="string">"你的邮箱"</span></span><br><span class="line">git<span class="built_in"> config </span>--global user.name  <span class="string">"你的名字"</span></span><br></pre></td></tr></table></figure><p><em>（注意 “ 前面是有空格的）</em><br>输入后在接着执行hexo g、hexo d即可！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;很早之前就听说可以通过github pages来搭建博客，但是由于种种原因（就是懒），迟迟没有付诸行动，终于，趁着暑假，开始了我的hexo+github pages 搭建博客的踩坑记，折腾了两天，终于成功搭建好了博客，接下来，开始分享搭建本博客的过程中以及各种坑。。。&lt;/p
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://jdsheng.cn/tags/hexo/"/>
    
      <category term="Next" scheme="https://jdsheng.cn/tags/Next/"/>
    
      <category term="github" scheme="https://jdsheng.cn/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>node.js学习记录</title>
    <link href="https://jdsheng.cn/2018/07/27/node.js%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>https://jdsheng.cn/2018/07/27/node.js学习记录/</id>
    <published>2018-07-27T15:18:24.412Z</published>
    <updated>2018-07-27T03:20:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>–<a href="https://www.nodebeginner.org/index-zh-cn.html#analyzing-our-http-server" target="_blank" rel="noopener">node.js入门</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;–&lt;a href=&quot;https://www.nodebeginner.org/index-zh-cn.html#analyzing-our-http-server&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;node.js入门&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="node.js" scheme="https://jdsheng.cn/tags/node-js/"/>
    
  </entry>
  
</feed>
